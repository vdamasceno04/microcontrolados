


ARM Macro Assembler    Page 1 


    1 00000000         ; lab02.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000         ; Definições do estado do cofre
   13 00000000 00000000 
                       GET_PASSWORD
                               EQU              0
   14 00000000 00000001 
                       SET_PASSWORD
                               EQU              1
   15 00000000 00000002 
                       OPENING EQU              2
   16 00000000 00000003 
                       OPEN    EQU              3
   17 00000000 00000004 
                       CLOSING EQU              4
   18 00000000 00000005 
                       CLOSED  EQU              5
   19 00000000 00000006 
                       LOCKED  EQU              6
   20 00000000 00000007 
                       LOCKED_MASTER
                               EQU              7
   21 00000000         
   22 00000000         ; Definições gerais
   23 00000000 00000003 
                       MAX_PASSWORD_ATTEMPTS
                               EQU              3
   24 00000000         ; O INVALID_DIGIT deve conter pelo menos 8 bits, caso co
                       ntrário, pode resultar no aumento do contador de acertos
                       
   25 00000000 00000100 
                       INVALID_DIGIT
                               EQU              256         ; Representa um díg
                                                            ito inválido do tec
                                                            lado matricial
   26 00000000 FFFFFFFF 
                       INVALID_PW_CHAR
                               EQU              -1          ; Representa um car
                                                            actere impossível d
                                                            e estar na senha
   27 00000000 00000064 
                       WAIT_HASH_CONFIRM
                               EQU              100         ; Valor aleatório s
                                                            ó para sinalizar o 
                                                            estado de aguardand
                                                            o # ser pressionado
                                                            



ARM Macro Assembler    Page 2 


   28 00000000         ; ------------------------------------------------------
                       -------------------------
   29 00000000         ; Área de Dados - Declarações de variáveis
   30 00000000                 AREA             DATA, ALIGN=2
   31 00000000         ; Se alguma variável for chamada em outro arquivo
   32 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   33 00000000         ; partir de outro arquivo
   34 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   35 00000000         ; de <tam> bytes a partir da primeira 
   36 00000000         ; posição da RAM  
   37 00000000 00 00 00 
              00 00 00 
              00 00    PASSWORDS
                               SPACE            8           ; 4 bytes para a se
                                                            nha do usuário e 4 
                                                            bytes para a senha 
                                                            mestra
   38 00000008         ; ------------------------------------------------------
                       -------------------------
   39 00000008         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   40 00000008         ;                  código
   41 00000008                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   42 00000000         
   43 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   44 00000000                 EXPORT           GetMasterPassword
   45 00000000                 EXPORT           MainLoop
   46 00000000         
   47 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   48 00000000         ; outro arquivo. No caso startup.s
   49 00000000         
   50 00000000         ; Se chamar alguma função externa 
   51 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   52 00000000         ; função <func>
   53 00000000         
   54 00000000                 EXPORT           zerar_memoria
   55 00000000                 IMPORT           PLL_Init
   56 00000000                 IMPORT           SysTick_Init
   57 00000000                 IMPORT           SysTick_Wait1ms
   58 00000000         
   59 00000000                 IMPORT           GPIO_Init
   60 00000000                 IMPORT           PortA_Output
   61 00000000                 IMPORT           PortP_Output
   62 00000000                 IMPORT           PortQ_Output
   63 00000000         
   64 00000000                 IMPORT           LCD_Init
   65 00000000                 IMPORT           LCD_Line2
   66 00000000                 IMPORT           LCD_Reset
   67 00000000                 IMPORT           LCD_PrintString
   68 00000000         
   69 00000000                 IMPORT           MapMatrixKeyboard
   70 00000000                 IMPORT           print_tabuada



ARM Macro Assembler    Page 3 


   71 00000000                 IMPORT           update_tabuada
   72 00000000         
   73 00000000         ; ------------------------------------------------------
                       -------------------------
   74 00000000         Start
   75 00000000 F7FF FFFE       BL               PLL_Init    ; Chama a subrotina
                                                             para alterar o clo
                                                            ck do microcontrola
                                                            dor para 80MHz
   76 00000004 F7FF FFFE       BL               SysTick_Init ; Chama a subrotin
                                                            a para inicializar 
                                                            o SysTick
   77 00000008 F7FF FFFE       BL               GPIO_Init   ; Chama a subrotina
                                                             que inicializa os 
                                                            GPIO
   78 0000000C F7FF FFFE       BL               LCD_Init    ; Chama a subrotina
                                                             que inicializa o L
                                                            CD
   79 00000010         
   80 00000010         ; R0, R1 e R2 reservados
   81 00000010         ; R3 usado para instruções e dados do LCD
   82 00000010         ; R4 usado para os textos do LCD
   83 00000010 F04F 0500       MOV              R5, #GET_PASSWORD ; R5 usado pa
                                                            ra o estado do cofr
                                                            e
   84 00000014 F44F 7680       MOV              R6, #INVALID_DIGIT ; R6 usado p
                                                            ara guardar o dígit
                                                            o lido do teclado
   85 00000018 F04F 0700       MOV              R7, #0      ; R7 usado para con
                                                            tar quantos dígitos
                                                             o usuário digitou
   86 0000001C F8DF 8360       LDR              R8, =PASSWORDS ; R8 usado para 
                                                            apontar a posição d
                                                            a senha salva na me
                                                            mória
   87 00000020 F04F 39FF       MOV              R9, #INVALID_PW_CHAR ; R9 usado
                                                             para ler os caract
                                                            eres da senha salva
                                                             na memória
   88 00000024 F888 9000       STRB             R9, [R8]
   89 00000028 F04F 0A00       MOV              R10, #0     ; R10 usado para co
                                                            ntar quantos dígito
                                                            s o usuário acertou
                                                            
   90 0000002C F04F 0B00       MOV              R11, #0     ; R11 usado para co
                                                            ntar quantos erros 
                                                            de senha acontecera
                                                            m
   91 00000030         ; R12 usado para configurar a senha mestra na memória e 
                       como registrador auxiliar
   92 00000030 F000 F801       BL               SetMasterPassword
   93 00000034         
   94 00000034 E7FE            B                MainLoop
   95 00000036         
   96 00000036         ; Função SetMasterPassword
   97 00000036         ; Guarda a senha mestra na memória
   98 00000036         ; Parâmetro de entrada: R8 -> Endereço aonde a senha dev
                       e ser armazenada
   99 00000036         ; Parâmetro de saída: Não tem



ARM Macro Assembler    Page 4 


  100 00000036         SetMasterPassword
  101 00000036 B500            PUSH             {LR}
  102 00000038         
  103 00000038 F04F 0C01       MOV              R12, #1     ; Primeiro dígito d
                                                            a senha mestra
  104 0000003C F888 C005       STRB             R12, [R8, #5] ; Senha mestra é 
                                                            armazenada 4 bytes 
                                                            a frente da senha d
                                                            o usuário
  105 00000040 F04F 0C02       MOV              R12, #2     ; Segundo dígito da
                                                             senha mestra
  106 00000044 F888 C006       STRB             R12, [R8, #6]
  107 00000048 F04F 0C03       MOV              R12, #3     ; Terceiro dígito d
                                                            a senha mestra
  108 0000004C F888 C007       STRB             R12, [R8, #7]
  109 00000050 F04F 0C04       MOV              R12, #4     ; Quarto dígito da 
                                                            senha mestra
  110 00000054 F888 C008       STRB             R12, [R8, #8]
  111 00000058 F04F 0C00       MOV              R12, #0
  112 0000005C         
  113 0000005C F85D EB04       POP              {LR}
  114 00000060 4770            BX               LR
  115 00000062         
  116 00000062         ; Função MainLoop
  117 00000062         ; Loop principal do programa
  118 00000062         ; Parâmetro de entrada: R5 -> Estado atual do cofre
  119 00000062         ; Parâmetro de saída: Não tem
  120 00000062         MainLoop
  121 00000062 2D05            CMP              R5, #CLOSED ; Verifica se o cof
                                                            re já está fechado
  122 00000064 D009            BEQ              ClosedFunction
  123 00000066         
  124 00000066 2D00            CMP              R5, #GET_PASSWORD ; Estado inic
                                                            ial do cofre. Pede 
                                                            a senha para fechá-
                                                            lo
  125 00000068 F000 80A8       BEQ.W            GetPassword ; Branch offset out
                                                             of range (BEQ.W co
                                                            rrige o problema)
  126 0000006C         
  127 0000006C 2D01            CMP              R5, #SET_PASSWORD ; Configura a
                                                             senha que o usuári
                                                            o digitou
  128 0000006E F000 80B4       BEQ.W            SetPassword ; Branch offset out
                                                             of range (BEQ.W co
                                                            rrige o problema)
  129 00000072         
  130 00000072 2D04            CMP              R5, #CLOSING ; Coloca o cofre e
                                                            m processo de fecha
                                                            mento
  131 00000074 F000 80C4       BEQ.W            ClosingFunction ; Branch offset
                                                             out of range (BEQ.
                                                            W corrige o problem
                                                            a)
  132 00000078         
  133 00000078 E7FE            B                MainLoop
  134 0000007A         
  135 0000007A         ; Funções ClosedFunction e CheckPassword
  136 0000007A         ; Verifica a senha digitada enquanto o cofre está fechad



ARM Macro Assembler    Page 5 


                       o
  137 0000007A         ; Parâmetro de entrada: Não tem
  138 0000007A         ; Parâmetro de saída: Não tem
  139 0000007A         ClosedFunction
  140 0000007A F7FF FFFE       BL               LCD_Line2   ; Coloca o cursor n
                                                            o começo da segunda
                                                             linha
  141 0000007E         
  142 0000007E 4CC1            LDR              R4, =EMPTY_STR ; Imprime uma st
                                                            ring vazia na segun
                                                            da linha
  143 00000080 F7FF FFFE       BL               LCD_PrintString
  144 00000084         
  145 00000084 F7FF FFFE       BL               LCD_Line2   ; Depois do cursor 
                                                            ser deslocado para 
                                                            o fim, posiciona de
                                                             volta no começo
  146 00000088         
  147 00000088 F04F 0700       MOV              R7, #0      ; O usuário ainda n
                                                            ão inseriu dígitos.
                                                             Zera o contador
  148 0000008C F04F 0A00       MOV              R10, #0     ; O usuário ainda n
                                                            ão acertou nenhum d
                                                            ígito. Zera o conta
                                                            dor
  149 00000090 F44F 7680       MOV              R6, #INVALID_DIGIT ; Nenhum díg
                                                            ito foi lido. Coloc
                                                            a R6 em estado invá
                                                            lido (reset)
  150 00000094         CheckPassword
  151 00000094 F7FF FFFE       BL               MapMatrixKeyboard ; Lê o dígito
                                                             pressionado no tec
                                                            lado e guarda em R6
                                                            
  152 00000098         
  153 00000098 F818 9007       LDRB             R9, [R8, R7] ; Desloca o pontei
                                                            ro da senha em R7 b
                                                            ytes, onde R7 é o c
                                                            ontador de dígitos 
                                                            inseridos
  154 0000009C         
  155 0000009C 454E            CMP              R6, R9      ; Compara o dígito 
                                                            inserido com o dígi
                                                            to da senha salva n
                                                            a memória
  156 0000009E BF08 F10A 
              0A01             ADDEQ            R10, R10, #1 ; Incrementa o con
                                                            tador de acertos se
                                                             o usuário acertou 
                                                            o caractere atual
  157 000000A4         
  158 000000A4 F44F 7680       MOV              R6, #INVALID_DIGIT ; Depois de 
                                                            contabilizado, inva
                                                            lida R6 e R9 para e
                                                            vitar erros
  159 000000A8 F04F 39FF       MOV              R9, #INVALID_PW_CHAR
  160 000000AC         
  161 000000AC F1BA 0F04       CMP              R10, #4     ; Verifica se o usu
                                                            ário já acertou os 



ARM Macro Assembler    Page 6 


                                                            4 dígitos da senha
  162 000000B0 D06E            BEQ              OpenFunction ; Se acertou, abre
                                                             o cofre
  163 000000B2         
  164 000000B2 2F04            CMP              R7, #4      ; 4 dígitos já fora
                                                            m inseridos, mas us
                                                            uário não acertou
  165 000000B4 D000            BEQ              WrongPassword ; Inseriu uma sen
                                                            ha incorreta
  166 000000B6         
  167 000000B6 E7ED            B                CheckPassword ; Continua lendo 
                                                            os dígitos se ainda
                                                             está inserindo
  168 000000B8         
  169 000000B8         ; Função WrongPassword
  170 000000B8         ; Mostra mensagem de erro de senha no display e trava o 
                       cofre se excedeu o máximo de tentativas
  171 000000B8         ; Parâmetro de entrada: Não tem
  172 000000B8         ; Parâmetro de saída: Não tem
  173 000000B8         WrongPassword
  174 000000B8 F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home
  175 000000BC         
  176 000000BC 4CB2            LDR              R4, =WRONG_PASSWORD_STR ; Impri
                                                            me mensagem de senh
                                                            a incorreta no disp
                                                            lay
  177 000000BE F7FF FFFE       BL               LCD_PrintString
  178 000000C2         
  179 000000C2 F44F 707A       MOV              R0, #1000   ; Mostra a mensagem
                                                             de erro durante 1s
                                                            
  180 000000C6 F7FF FFFE       BL               SysTick_Wait1ms
  181 000000CA         
  182 000000CA F1BB 0F03       CMP              R11, #MAX_PASSWORD_ATTEMPTS ; V
                                                            erifica se chegou n
                                                            o número máximo de 
                                                            tentativas de senha
                                                            
  183 000000CE BF18 F10B 
              0B01             ADDNE            R11, R11, #1 ; Se não chegou, i
                                                            ncrementa o contado
                                                            r
  184 000000D4         
  185 000000D4 F1BB 0F03       CMP              R11, #MAX_PASSWORD_ATTEMPTS ; S
                                                            e a tentativa atual
                                                             é o máximo, trava 
                                                            o cofre
  186 000000D8 D002            BEQ              LockedFunction
  187 000000DA         
  188 000000DA F04F 0700       MOV              R7, #0      ; Zera o contador d
                                                            e dígitos inseridos
                                                            
  189 000000DE         
  190 000000DE E7CC            B                ClosedFunction ; Ainda restam t
                                                            entativas -> Retoma
                                                             a rotina de verifi
                                                            cação de senha



ARM Macro Assembler    Page 7 


  191 000000E0         
  192 000000E0         ; Funções LockedFunction, MasterPasswordError, WaitPJ0_I
                       nterrupt e CheckMasterPassword
  193 000000E0         ; Mostra mensagem de cofre travado com senha mestra e ag
                       uarda usuário pressionar PJ0 e inserir senha mestra para
                        destravar
  194 000000E0         ; Parâmetro de entrada: Não tem
  195 000000E0         ; Parâmetro de saída: Não tem
  196 000000E0         LockedFunction
  197 000000E0 F04F 0507       MOV              R5, #LOCKED_MASTER ; Cofre foi 
                                                            travado e precisa d
                                                            a senha mestra para
                                                             ser destravado
  198 000000E4 F44F 7680       MOV              R6, #INVALID_DIGIT ; Invalida p
                                                            ara evitar erros
  199 000000E8 F04F 0704       MOV              R7, #4      ; R7 = 4 para ignor
                                                            ar os primeiros 4 b
                                                            ytes da memória em 
                                                            PASSWORDS (acessar 
                                                            senha mestra)
  200 000000EC F04F 39FF       MOV              R9, #INVALID_PW_CHAR ; Invalida
                                                             para evitar erros
  201 000000F0 F04F 0A00       MOV              R10, #0     ; Zera o contador d
                                                            e dígitos acertados
                                                            
  202 000000F4         MasterPasswordError
  203 000000F4 F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home
  204 000000F8         
  205 000000F8 4CA4            LDR              R4, =LOCKED_MASTER_STR ; Mostra
                                                             a mensagem de erro
                                                             senha mestra
  206 000000FA F7FF FFFE       BL               LCD_PrintString
  207 000000FE         WaitPJ0_Interrupt
  208 000000FE F000 F816       BL               StartBlinkingLEDs ; Chama a rot
                                                            ina que pisca todos
                                                             os LEDs da placa a
                                                            uxiliar
  209 00000102 2D06            CMP              R5, #LOCKED ; Verifica se PJ0 f
                                                            oi pressionado para
                                                             sair do modo trava
                                                            do senha mestra par
                                                            a travado
  210 00000104 D1FB            BNE              WaitPJ0_Interrupt
  211 00000106 F7FF FFFE       BL               LCD_Line2   ; Coloca o cursor n
                                                            o começo da segunda
                                                             linha
  212 0000010A         CheckMasterPassword
  213 0000010A F7FF FFFE       BL               MapMatrixKeyboard ; Lê o dígito
                                                             pressionado no tec
                                                            lado e guarda em R6
                                                            
  214 0000010E         
  215 0000010E F818 9007       LDRB             R9, [R8, R7] ; Lê um dígito da 
                                                            senha mestra
  216 00000112 454E            CMP              R6, R9      ; Compara com o díg
                                                            ito inserido
  217 00000114 BF08 F10A 



ARM Macro Assembler    Page 8 


              0A01             ADDEQ            R10, R10, #1 ; Se estiver certo
                                                            , incrementa o cont
                                                            ador de acertos
  218 0000011A         
  219 0000011A F44F 7680       MOV              R6, #INVALID_DIGIT ; Invalida p
                                                            ara evitar erros
  220 0000011E F04F 39FF       MOV              R9, #INVALID_PW_CHAR ; Invalida
                                                             para evitar erros
  221 00000122         
  222 00000122 F1BA 0F04       CMP              R10, #4     ; Verifica se os 4 
                                                            dígitos corretos fo
                                                            ram inseridos
  223 00000126 D030            BEQ              UnlockFunction 
                                                            ; Destrava o cofre
  224 00000128         
  225 00000128 2F08            CMP              R7, #8      ; Verifica se já le
                                                            u 4 dígitos, mas nã
                                                            o foram os certos
  226 0000012A D0D9            BEQ              LockedFunction ; Retoma a rotin
                                                            a de pedir interrup
                                                            ção do PJ0 e senha 
                                                            mestra
  227 0000012C         
  228 0000012C E7ED            B                CheckMasterPassword ; Se nada d
                                                            isso aconteceu, con
                                                            tinua lendo os dígi
                                                            tos
  229 0000012E         
  230 0000012E         ; Função StartBlinkingLEDs
  231 0000012E         ; Pisca todos os LEDs da placa auxiliar
  232 0000012E         ; Parâmetro de entrada: Não tem
  233 0000012E         ; Parâmetro de saída: Não tem
  234 0000012E         StartBlinkingLEDs
  235 0000012E B500            PUSH             {LR}
  236 00000130         
  237 00000130 F04F 0020       MOV              R0, #2_100000 ; Ativa o transis
                                                            tor dos LEDs (PP5)
  238 00000134 F7FF FFFE       BL               PortP_Output
  239 00000138         
  240 00000138 F04F 0001       MOV              R0, #1      ; Atrasa 1ms
  241 0000013C F7FF FFFE       BL               SysTick_Wait1ms
  242 00000140         
  243 00000140 F04F 00F0       MOV              R0, #2_11110000 ; Ativa os LEDs
                                                             PA7:PA4
  244 00000144 F7FF FFFE       BL               PortA_Output
  245 00000148 F04F 000F       MOV              R0, #2_00001111 ; Ativa os LEDs
                                                             PQ3:PQ0
  246 0000014C F7FF FFFE       BL               PortQ_Output
  247 00000150         
  248 00000150 F04F 0064       MOV              R0, #100    ; LEDs ativados dur
                                                            ante 100ms
  249 00000154 F7FF FFFE       BL               SysTick_Wait1ms
  250 00000158         
  251 00000158 F04F 0000       MOV              R0, #2_00000000 ; Desativa os L
                                                            EDs PA7:PA4 e PQ3:P
                                                            Q0
  252 0000015C F7FF FFFE       BL               PortA_Output
  253 00000160 F7FF FFFE       BL               PortQ_Output
  254 00000164         



ARM Macro Assembler    Page 9 


  255 00000164 F04F 0064       MOV              R0, #100    ; LEDs desativados 
                                                            durante 100ms
  256 00000168 F7FF FFFE       BL               SysTick_Wait1ms
  257 0000016C         
  258 0000016C F85D EB04       POP              {LR}
  259 00000170 4770            BX               LR
  260 00000172         
  261 00000172         ; Função StopBlinkingLEDs
  262 00000172         ; Desativa o transistor dos LEDs (para de piscar todos o
                       s LEDs da placa auxiliar)
  263 00000172         ; Parâmetro de entrada: Não tem
  264 00000172         ; Parâmetro de saída: Não tem
  265 00000172         StopBlinkingLEDs
  266 00000172 B500            PUSH             {LR}
  267 00000174         
  268 00000174 F04F 0000       MOV              R0, #2_000000 ; Desativa o tran
                                                            sistor dos LEDs (PP
                                                            5)
  269 00000178 F7FF FFFE       BL               PortP_Output
  270 0000017C         
  271 0000017C F04F 0001       MOV              R0, #1      ; Atrasa 1ms
  272 00000180 F7FF FFFE       BL               SysTick_Wait1ms
  273 00000184         
  274 00000184 F85D EB04       POP              {LR}
  275 00000188 4770            BX               LR
  276 0000018A         
  277 0000018A         ; Função UnlockFunction
  278 0000018A         ; Para de piscar os LEDs da placa e abre o cofre
  279 0000018A         ; Parâmetro de entrada: Não tem
  280 0000018A         ; Parâmetro de saída: Não tem
  281 0000018A         UnlockFunction
  282 0000018A F7FF FFF2       BL               StopBlinkingLEDs ; Para de pisc
                                                            ar todos os LEDs da
                                                             placa auxiliar
  283 0000018E         
  284 0000018E E7FF            B                OpenFunction ; Abre o cofre
  285 00000190         
  286 00000190         ; Função OpenFunction
  287 00000190         ; Zera registradores e coloca o cofre em estado de pedir
                        senha (cofre aberto)
  288 00000190         ; Parâmetro de entrada: Não tem
  289 00000190         ; Parâmetro de saída: Não tem
  290 00000190         OpenFunction
  291 00000190 F04F 0500       MOV              R5, #GET_PASSWORD ; Coloca o co
                                                            fre em estado de pe
                                                            dir senha
  292 00000194 F44F 7680       MOV              R6, #INVALID_DIGIT ; Invalida R
                                                            6 com valor fora do
                                                             intervalo
  293 00000198 F04F 0700       MOV              R7, #0      ; Zera o contador d
                                                            e dígitos inseridos
                                                            
  294 0000019C F04F 0A00       MOV              R10, #0     ; Zera o contador d
                                                            e dígitos acertados
                                                            
  295 000001A0 F04F 0B00       MOV              R11, #0     ; Zera o contador d
                                                            e erros de senha
  296 000001A4 F04F 0C00       MOV              R12, #0     ; Zera o registrado
                                                            r auxiliar



ARM Macro Assembler    Page 10 


  297 000001A8         
  298 000001A8 F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home
  299 000001AC         
  300 000001AC 4C78            LDR              R4, =OPENING_STR ; Imprime a me
                                                            nsagem abrindo cofr
                                                            e
  301 000001AE         ; Esse erro parou de aparecer, então comentei a linha
  302 000001AE         ;LTORG      ; Error: Literal pool too distant, use LTORG
                        to assemble it within 4KB
  303 000001AE F7FF FFFE       BL               LCD_PrintString
  304 000001B2         
  305 000001B2 F241 3088       MOV              R0, #5000   ; Mostra a mensagem
                                                             durante 5s
  306 000001B6 F7FF FFFE       BL               SysTick_Wait1ms
  307 000001BA         
  308 000001BA E7FE            B                MainLoop    ; Retoma o loop pri
                                                            ncipal
  309 000001BC         
  310 000001BC         ; Função GetPassword
  311 000001BC         ; Mostra a mensagem de inserir nova senha e coloca o cof
                       re em estado de configurar a nova senha
  312 000001BC         ; Parâmetro de entrada: Não tem
  313 000001BC         ; Parâmetro de saída: Não tem
  314 000001BC         GetPassword
  315 000001BC F7FF FFFE       BL               zerar_memoria
  316 000001C0         
  317 000001C0 F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home 
  318 000001C4 4C73            LDR              R4, =TABUADA_INIT1
  319 000001C6 F7FF FFFE       BL               LCD_PrintString
  320 000001CA F7FF FFFE       BL               LCD_Line2
  321 000001CE 4C72            LDR              R4, =TABUADA_INIT2
  322 000001D0 F7FF FFFE       BL               LCD_PrintString
  323 000001D4         ;MOV R0, #2   ; simula clique no 2
  324 000001D4         ;BL update_tabuada
  325 000001D4         ;BL print_tabuada
  326 000001D4         ;MOV R0, #500    ; Mostra a mensagem durante 5s
  327 000001D4         ;BL SysTick_Wait1ms ; Informa que o cofre está aberto na
                        primeira linha do LCD
  328 000001D4         
  329 000001D4 F04F 0501       MOV              R5, #SET_PASSWORD ; Coloca o co
                                                            fre em estado de ca
                                                            dastrar a nova senh
                                                            a
  330 000001D8         
  331 000001D8 E7FE            B                MainLoop    ; Retoma o loop pri
                                                            ncipal no estado de
                                                             cadastrar a nova s
                                                            enha
  332 000001DA         
  333 000001DA         ; Função SetPassword
  334 000001DA         ; Mostra a mensagem de confirmação de senha usando # e a
                       guarda # ser inserida para avançar para o estado de fech
                       ando cofre
  335 000001DA         ; Parâmetro de entrada: Não tem
  336 000001DA         ; Parâmetro de saída: Não tem



ARM Macro Assembler    Page 11 


  337 000001DA         SetPassword
  338 000001DA F7FF FFFE       BL               MapMatrixKeyboard ; Lê o dígito
                                                             pressionado no tec
                                                            lado e guarda em R6
                                                            
  339 000001DE         
  340 000001DE F1BC 0F64       CMP              R12, #WAIT_HASH_CONFIRM ; Flag 
                                                            de 4 dígitos inseri
                                                            dos e aguardando a 
                                                            confirmação com #
  341 000001E2 D00A            BEQ              CheckHashConfirmation
  342 000001E4         
  343 000001E4 F808 6007       STRB             R6, [R8, R7] ; Guarda o dígito 
                                                            inserido na memória
                                                             sequencialmente
  344 000001E8         
  345 000001E8 2F04            CMP              R7, #4      ; Verifica se 4 díg
                                                            itos foram inserido
                                                            s
  346 000001EA DBF6            BLT              SetPassword ; Se não, retoma o 
                                                            loop para receber o
                                                             próximo
  347 000001EC         
  348 000001EC F7FF FFFE       BL               LCD_Reset   ; Se sim, limpa o d
                                                            isplay e coloca o c
                                                            ursor em home
  349 000001F0         
  350 000001F0 4C6A            LDR              R4, =HASH_CONFIRM_STR ; Imprime
                                                             a mensagem de conf
                                                            irmação da senha us
                                                            ando #
  351 000001F2 F7FF FFFE       BL               LCD_PrintString
  352 000001F6         
  353 000001F6 F04F 0C64       MOV              R12, #WAIT_HASH_CONFIRM ; Flag 
                                                            de 4 dígitos inseri
                                                            dos e aguardando a 
                                                            confirmação com #
  354 000001FA         CheckHashConfirmation
  355 000001FA 2D04            CMP              R5, #CLOSING ; Verifica se o es
                                                            tado do cofre é fec
                                                            hando (DIGIT_HASH n
                                                            o matrix_keyboard.s
                                                             altera R5 para CLO
                                                            SING)
  356 000001FC D1ED            BNE              SetPassword ; Se ainda não for,
                                                             volta para configu
                                                            rar a senha
  357 000001FE E7FE            B                MainLoop    ; Retoma o loop pri
                                                            ncipal
  358 00000200         
  359 00000200         ; Função ClosingFunction
  360 00000200         ; Mostra a mensagem que o cofre está fechando, fecha o c
                       ofre e mostra que está fechado
  361 00000200         ; Parâmetro de entrada: Não tem
  362 00000200         ; Parâmetro de saída: Não tem
  363 00000200         ClosingFunction
  364 00000200 F44F 707A       MOV              R0, #1000   ; Aguarda 1s antes 
                                                            de iniciar o proces
                                                            so de fechamento do



ARM Macro Assembler    Page 12 


                                                             cofre
  365 00000204 F7FF FFFE       BL               SysTick_Wait1ms
  366 00000208         
  367 00000208 F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home
  368 0000020C         
  369 0000020C 4C64            LDR              R4, =CLOSING_STR ; Imprime a me
                                                            nsagem de fechando 
                                                            cofre
  370 0000020E F7FF FFFE       BL               LCD_PrintString
  371 00000212         
  372 00000212 F241 3088       MOV              R0, #5000   ; Mostra a mensagem
                                                             durante 5s
  373 00000216 F7FF FFFE       BL               SysTick_Wait1ms
  374 0000021A         
  375 0000021A F7FF FFFE       BL               LCD_Reset   ; Limpa o display e
                                                             coloca o cursor em
                                                             home
  376 0000021E         
  377 0000021E 4C61            LDR              R4, =CLOSED_STR ; Imprime a men
                                                            sagem de cofre fech
                                                            ado na primeira lin
                                                            ha do LCD
  378 00000220 F7FF FFFE       BL               LCD_PrintString
  379 00000224         
  380 00000224 F7FF FFFE       BL               LCD_Line2   ; Coloca o cursor n
                                                            o começo da segunda
                                                             linha
  381 00000228 4C5F            LDR              R4, =ENTER_PASSWORD_STR ; Pede 
                                                            para o usuário inse
                                                            rir a senha na segu
                                                            nda linha do LCD
  382 0000022A F7FF FFFE       BL               LCD_PrintString
  383 0000022E         
  384 0000022E F44F 707A       MOV              R0, #1000   ; Aguarda 1s antes 
                                                            de mudar o estado d
                                                            o cofre para tranca
                                                            do
  385 00000232 F7FF FFFE       BL               SysTick_Wait1ms
  386 00000236         
  387 00000236 F04F 0505       MOV              R5, #CLOSED ; Coloca o cofre em
                                                             estado de fechado
  388 0000023A         
  389 0000023A E7FE            B                MainLoop    ; Retoma o loop pri
                                                            ncipal
  390 0000023C         
  391 0000023C         
  392 0000023C         ;SETAR SENHA MESTRE 
  393 0000023C         GetMasterPassword
  394 0000023C B500            PUSH             {LR}
  395 0000023E F7FF FFFE       BL               LCD_Reset
  396 00000242         
  397 00000242 4C5A            LDR              R4,=ENTER_MASTER_PASSWORD_STR ;
                                                             muda a string que 
                                                            vai pro display
  398 00000244         
  399 00000244 F7FF FFFE       BL               LCD_PrintString ;imprime nova s
                                                            tring



ARM Macro Assembler    Page 13 


  400 00000248         
  401 00000248 F44F 60FA       MOV              R0, #2000   ; seta o tempo de 2
                                                            s
  402 0000024C         
  403 0000024C F7FF FFFE       BL               SysTick_Wait1ms
  404 00000250         
  405 00000250 F7FF FFFE       BL               LCD_Line2
  406 00000254         
  407 00000254 F04F 0704       MOV              R7, #4
  408 00000258 E7FF            B                SetNewMasterPassword
  409 0000025A         
  410 0000025A         SetNewMasterPassword
  411 0000025A         
  412 0000025A F7FF FFFE       BL               MapMatrixKeyboard
  413 0000025E         
  414 0000025E F5B6 7F80       CMP              R6, #INVALID_DIGIT
  415 00000262 BF18            IT               NE
  416 00000264 F808 6007       STRBNE           R6, [R8, R7] ; guarda a senha
  417 00000268 F44F 7680       MOV              R6, #INVALID_DIGIT ; Depois de 
                                                            contabilizado, inva
                                                            lida R6 para evitar
                                                             erros
  418 0000026C         
  419 0000026C 2F08            CMP              R7, #8      ; Verifica se 4 dig
                                                            itos foram inserido
                                                            s
  420 0000026E DBF4            BLT              SetNewMasterPassword ; Se não, 
                                                            volta para o inicio
                                                             
  421 00000270 D8FE            BHI              GetMasterPassword
  422 00000272 D0FF            BEQ              ChangedMasterPassword
  423 00000274         
  424 00000274         ChangedMasterPassword
  425 00000274 F04F 0700       MOV              R7, #0
  426 00000278 F7FF FFFE       BL               LCD_Reset
  427 0000027C 4C4C            LDR              R4,=CHANGED_MASTER_PASSWORD_STR
 
                                                            ; muda a string que
                                                             vai pro display
  428 0000027E F7FF FFFE       BL               LCD_PrintString ;imprime nova s
                                                            tring
  429 00000282 F44F 60FA       MOV              R0, #2000   ; seta o tempo de 2
                                                            s
  430 00000286 F7FF FFFE       BL               SysTick_Wait1ms
  431 0000028A F85D EB04       POP              {LR}
  432 0000028E 4770            BX               LR
  433 00000290         
  434 00000290         zerar_memoria
  435 00000290 4848            LDR              R0, =0x20000A00 
                                                            ; Endereço inicial
  436 00000292 4949            LDR              R1, =0x20000B00 
                                                            ; Endereço final
  437 00000294 F04F 0209       MOV              R2, #9      ; Valor a ser escri
                                                            to (zero)
  438 00000298         
  439 00000298         zerar_loop
  440 00000298 4288            CMP              R0, R1      ; Verifica se R0 at
                                                            ingiu o endereço fi
                                                            nal



ARM Macro Assembler    Page 14 


  441 0000029A DA02            BGE              zerar_fim   ; Se R0 >= R1, sai 
                                                            do loop
  442 0000029C F840 2B04       STR              R2, [R0], #4 ; Armazena zero no
                                                             endereço atual e i
                                                            ncrementa R0 em 4 b
                                                            ytes
  443 000002A0 E7FA            B                zerar_loop  ; Repete o loop
  444 000002A2         
  445 000002A2         zerar_fim
  446 000002A2 4770            BX               LR          ; Retorna da função
                                                            
  447 000002A4         
  448 000002A4         
  449 000002A4         ; Definição dos textos do LCD com 16 caracteres cada
  450 000002A4 54 61 62 
              75 61 64 
              61 20 64 
              6F 20 6E 
              78 6D 00 TABUADA_INIT1
                               DCB              "Tabuada do nxm", 0
  451 000002B3 6E 78 6D 
              3D 72 65 
              73 75 6C 
              74 61 64 
              6F 00    TABUADA_INIT2
                               DCB              "nxm=resultado", 0
  452 000002C1 41 62 72 
              69 6E 64 
              6F 20 20 
              20 20 20 
              20 20 20 
              20 00    OPENING_STR
                               DCB              "Abrindo         ", 0
  453 000002D2 77 00   OPEN_STR
                               DCB              "w",  0
  454 000002D4 46 65 63 
              68 61 6E 
              64 6F 20 
              20 20 20 
              20 20 20 
              20 00    CLOSING_STR
                               DCB              "Fechando        ", 0
  455 000002E5 43 6F 66 
              72 65 20 
              66 65 63 
              68 61 64 
              6F 20 20 
              20 00    CLOSED_STR
                               DCB              "Cofre fechado   ", 0
  456 000002F6         
  457 000002F6 45 52 52 
              20 53 65 
              6E 68 61 
              20 6D 65 
              73 74 72 
              61 00    LOCKED_MASTER_STR
                               DCB              "ERR Senha mestra", 0
  458 00000307         
  459 00000307 43 6F 6E 



ARM Macro Assembler    Page 15 


              66 69 72 
              6D 65 20 
              63 6F 6D 
              20 23 20 
              20 00    HASH_CONFIRM_STR
                               DCB              "Confirme com #  ", 0
  460 00000318 44 69 67 
              69 74 65 
              20 6E 6F 
              76 61 20 
              73 65 6E 
              68 00    GET_PASSWORD_STR
                               DCB              "Digite nova senh", 0
  461 00000329         
  462 00000329 44 69 67 
              69 74 65 
              20 61 20 
              73 65 6E 
              68 61 20 
              00       ENTER_PASSWORD_STR
                               DCB              "Digite a senha ", 0
  463 00000339 4E 6F 76 
              61 20 73 
              65 6E 68 
              61 20 6D 
              65 73 74 
              72 00    ENTER_MASTER_PASSWORD_STR
                               DCB              "Nova senha mestr", 0
  464 0000034A 53 65 6E 
              68 61 20 
              6D 65 73 
              74 72 65 
              20 61 6C 
              74 00    CHANGED_MASTER_PASSWORD_STR
                               DCB              "Senha mestre alt", 0
  465 0000035B         
  466 0000035B 20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 00    EMPTY_STR
                               DCB              "                ", 0
  467 0000036C         
  468 0000036C 45 52 52 
              20 53 65 
              6E 68 61 
              20 65 72 
              72 61 64 
              61 00    WRONG_PASSWORD_STR
                               DCB              "ERR Senha errada", 0
  469 0000037D         
  470 0000037D         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  471 0000037D         ; Fim do Arquivo
  472 0000037D         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 



ARM Macro Assembler    Page 16 


  473 0000037D 00 00 00        ALIGN                        ; Garante que o fim
                                                             da seção está alin
                                                            hada 
  474 00000380                 END                          ; Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              20000A00 
              20000B00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\main.d -o.\objects\main.o -IC:\Users\victo\AppData
\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL
 SETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SE
TA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: DATA unused
PASSWORDS 00000000

Symbol: PASSWORDS
   Definitions
      At line 37 in file main.s
   Uses
      At line 86 in file main.s
Comment: PASSWORDS used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: .text unused
CHANGED_MASTER_PASSWORD_STR 0000034A

Symbol: CHANGED_MASTER_PASSWORD_STR
   Definitions
      At line 464 in file main.s
   Uses
      At line 427 in file main.s
Comment: CHANGED_MASTER_PASSWORD_STR used once
CLOSED_STR 000002E5

Symbol: CLOSED_STR
   Definitions
      At line 455 in file main.s
   Uses
      At line 377 in file main.s
Comment: CLOSED_STR used once
CLOSING_STR 000002D4

Symbol: CLOSING_STR
   Definitions
      At line 454 in file main.s
   Uses
      At line 369 in file main.s
Comment: CLOSING_STR used once
ChangedMasterPassword 00000274

Symbol: ChangedMasterPassword
   Definitions
      At line 424 in file main.s
   Uses
      At line 422 in file main.s
Comment: ChangedMasterPassword used once
CheckHashConfirmation 000001FA

Symbol: CheckHashConfirmation
   Definitions
      At line 354 in file main.s
   Uses
      At line 341 in file main.s
Comment: CheckHashConfirmation used once
CheckMasterPassword 0000010A

Symbol: CheckMasterPassword
   Definitions
      At line 212 in file main.s
   Uses
      At line 228 in file main.s
Comment: CheckMasterPassword used once
CheckPassword 00000094

Symbol: CheckPassword



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 150 in file main.s
   Uses
      At line 167 in file main.s
Comment: CheckPassword used once
ClosedFunction 0000007A

Symbol: ClosedFunction
   Definitions
      At line 139 in file main.s
   Uses
      At line 122 in file main.s
      At line 190 in file main.s

ClosingFunction 00000200

Symbol: ClosingFunction
   Definitions
      At line 363 in file main.s
   Uses
      At line 131 in file main.s
Comment: ClosingFunction used once
EMPTY_STR 0000035B

Symbol: EMPTY_STR
   Definitions
      At line 466 in file main.s
   Uses
      At line 142 in file main.s
Comment: EMPTY_STR used once
ENTER_MASTER_PASSWORD_STR 00000339

Symbol: ENTER_MASTER_PASSWORD_STR
   Definitions
      At line 463 in file main.s
   Uses
      At line 397 in file main.s
Comment: ENTER_MASTER_PASSWORD_STR used once
ENTER_PASSWORD_STR 00000329

Symbol: ENTER_PASSWORD_STR
   Definitions
      At line 462 in file main.s
   Uses
      At line 381 in file main.s
Comment: ENTER_PASSWORD_STR used once
GET_PASSWORD_STR 00000318

Symbol: GET_PASSWORD_STR
   Definitions
      At line 460 in file main.s
   Uses
      None
Comment: GET_PASSWORD_STR unused
GetMasterPassword 0000023C

Symbol: GetMasterPassword
   Definitions
      At line 393 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 44 in file main.s
      At line 421 in file main.s

GetPassword 000001BC

Symbol: GetPassword
   Definitions
      At line 314 in file main.s
   Uses
      At line 125 in file main.s
Comment: GetPassword used once
HASH_CONFIRM_STR 00000307

Symbol: HASH_CONFIRM_STR
   Definitions
      At line 459 in file main.s
   Uses
      At line 350 in file main.s
Comment: HASH_CONFIRM_STR used once
LOCKED_MASTER_STR 000002F6

Symbol: LOCKED_MASTER_STR
   Definitions
      At line 457 in file main.s
   Uses
      At line 205 in file main.s
Comment: LOCKED_MASTER_STR used once
LockedFunction 000000E0

Symbol: LockedFunction
   Definitions
      At line 196 in file main.s
   Uses
      At line 186 in file main.s
      At line 226 in file main.s

MainLoop 00000062

Symbol: MainLoop
   Definitions
      At line 120 in file main.s
   Uses
      At line 45 in file main.s
      At line 94 in file main.s
      At line 133 in file main.s
      At line 308 in file main.s
      At line 331 in file main.s
      At line 357 in file main.s
      At line 389 in file main.s

MasterPasswordError 000000F4

Symbol: MasterPasswordError
   Definitions
      At line 202 in file main.s
   Uses
      None
Comment: MasterPasswordError unused



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

OPENING_STR 000002C1

Symbol: OPENING_STR
   Definitions
      At line 452 in file main.s
   Uses
      At line 300 in file main.s
Comment: OPENING_STR used once
OPEN_STR 000002D2

Symbol: OPEN_STR
   Definitions
      At line 453 in file main.s
   Uses
      None
Comment: OPEN_STR unused
OpenFunction 00000190

Symbol: OpenFunction
   Definitions
      At line 290 in file main.s
   Uses
      At line 162 in file main.s
      At line 284 in file main.s

SetMasterPassword 00000036

Symbol: SetMasterPassword
   Definitions
      At line 100 in file main.s
   Uses
      At line 92 in file main.s
Comment: SetMasterPassword used once
SetNewMasterPassword 0000025A

Symbol: SetNewMasterPassword
   Definitions
      At line 410 in file main.s
   Uses
      At line 408 in file main.s
      At line 420 in file main.s

SetPassword 000001DA

Symbol: SetPassword
   Definitions
      At line 337 in file main.s
   Uses
      At line 128 in file main.s
      At line 346 in file main.s
      At line 356 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 74 in file main.s
   Uses
      At line 47 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

Comment: Start used once
StartBlinkingLEDs 0000012E

Symbol: StartBlinkingLEDs
   Definitions
      At line 234 in file main.s
   Uses
      At line 208 in file main.s
Comment: StartBlinkingLEDs used once
StopBlinkingLEDs 00000172

Symbol: StopBlinkingLEDs
   Definitions
      At line 265 in file main.s
   Uses
      At line 282 in file main.s
Comment: StopBlinkingLEDs used once
TABUADA_INIT1 000002A4

Symbol: TABUADA_INIT1
   Definitions
      At line 450 in file main.s
   Uses
      At line 318 in file main.s
Comment: TABUADA_INIT1 used once
TABUADA_INIT2 000002B3

Symbol: TABUADA_INIT2
   Definitions
      At line 451 in file main.s
   Uses
      At line 321 in file main.s
Comment: TABUADA_INIT2 used once
UnlockFunction 0000018A

Symbol: UnlockFunction
   Definitions
      At line 281 in file main.s
   Uses
      At line 223 in file main.s
Comment: UnlockFunction used once
WRONG_PASSWORD_STR 0000036C

Symbol: WRONG_PASSWORD_STR
   Definitions
      At line 468 in file main.s
   Uses
      At line 176 in file main.s
Comment: WRONG_PASSWORD_STR used once
WaitPJ0_Interrupt 000000FE

Symbol: WaitPJ0_Interrupt
   Definitions
      At line 207 in file main.s
   Uses
      At line 210 in file main.s
Comment: WaitPJ0_Interrupt used once
WrongPassword 000000B8




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Symbol: WrongPassword
   Definitions
      At line 173 in file main.s
   Uses
      At line 165 in file main.s
Comment: WrongPassword used once
zerar_fim 000002A2

Symbol: zerar_fim
   Definitions
      At line 445 in file main.s
   Uses
      At line 441 in file main.s
Comment: zerar_fim used once
zerar_loop 00000298

Symbol: zerar_loop
   Definitions
      At line 439 in file main.s
   Uses
      At line 443 in file main.s
Comment: zerar_loop used once
zerar_memoria 00000290

Symbol: zerar_memoria
   Definitions
      At line 434 in file main.s
   Uses
      At line 54 in file main.s
      At line 315 in file main.s

39 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CLOSED 00000005

Symbol: CLOSED
   Definitions
      At line 18 in file main.s
   Uses
      At line 121 in file main.s
      At line 387 in file main.s

CLOSING 00000004

Symbol: CLOSING
   Definitions
      At line 17 in file main.s
   Uses
      At line 130 in file main.s
      At line 355 in file main.s

GET_PASSWORD 00000000

Symbol: GET_PASSWORD
   Definitions
      At line 13 in file main.s
   Uses
      At line 83 in file main.s
      At line 124 in file main.s
      At line 291 in file main.s

INVALID_DIGIT 00000100

Symbol: INVALID_DIGIT
   Definitions
      At line 25 in file main.s
   Uses
      At line 84 in file main.s
      At line 149 in file main.s
      At line 158 in file main.s
      At line 198 in file main.s
      At line 219 in file main.s
      At line 292 in file main.s
      At line 414 in file main.s
      At line 417 in file main.s

INVALID_PW_CHAR FFFFFFFF

Symbol: INVALID_PW_CHAR
   Definitions
      At line 26 in file main.s
   Uses
      At line 87 in file main.s
      At line 159 in file main.s
      At line 200 in file main.s
      At line 220 in file main.s

LOCKED 00000006

Symbol: LOCKED
   Definitions
      At line 19 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Uses
      At line 209 in file main.s
Comment: LOCKED used once
LOCKED_MASTER 00000007

Symbol: LOCKED_MASTER
   Definitions
      At line 20 in file main.s
   Uses
      At line 197 in file main.s
Comment: LOCKED_MASTER used once
MAX_PASSWORD_ATTEMPTS 00000003

Symbol: MAX_PASSWORD_ATTEMPTS
   Definitions
      At line 23 in file main.s
   Uses
      At line 182 in file main.s
      At line 185 in file main.s

OPEN 00000003

Symbol: OPEN
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: OPEN unused
OPENING 00000002

Symbol: OPENING
   Definitions
      At line 15 in file main.s
   Uses
      None
Comment: OPENING unused
SET_PASSWORD 00000001

Symbol: SET_PASSWORD
   Definitions
      At line 14 in file main.s
   Uses
      At line 127 in file main.s
      At line 329 in file main.s

WAIT_HASH_CONFIRM 00000064

Symbol: WAIT_HASH_CONFIRM
   Definitions
      At line 27 in file main.s
   Uses
      At line 340 in file main.s
      At line 353 in file main.s

12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 59 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_Init used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 64 in file main.s
   Uses
      At line 78 in file main.s
Comment: LCD_Init used once
LCD_Line2 00000000

Symbol: LCD_Line2
   Definitions
      At line 65 in file main.s
   Uses
      At line 140 in file main.s
      At line 145 in file main.s
      At line 211 in file main.s
      At line 320 in file main.s
      At line 380 in file main.s
      At line 405 in file main.s

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 67 in file main.s
   Uses
      At line 143 in file main.s
      At line 177 in file main.s
      At line 206 in file main.s
      At line 303 in file main.s
      At line 319 in file main.s
      At line 322 in file main.s
      At line 351 in file main.s
      At line 370 in file main.s
      At line 378 in file main.s
      At line 382 in file main.s
      At line 399 in file main.s
      At line 428 in file main.s

LCD_Reset 00000000

Symbol: LCD_Reset
   Definitions
      At line 66 in file main.s
   Uses
      At line 174 in file main.s
      At line 203 in file main.s
      At line 298 in file main.s
      At line 317 in file main.s
      At line 348 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 367 in file main.s
      At line 375 in file main.s
      At line 395 in file main.s
      At line 426 in file main.s

MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 69 in file main.s
   Uses
      At line 151 in file main.s
      At line 213 in file main.s
      At line 338 in file main.s
      At line 412 in file main.s

PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 55 in file main.s
   Uses
      At line 75 in file main.s
Comment: PLL_Init used once
PortA_Output 00000000

Symbol: PortA_Output
   Definitions
      At line 60 in file main.s
   Uses
      At line 244 in file main.s
      At line 252 in file main.s

PortP_Output 00000000

Symbol: PortP_Output
   Definitions
      At line 61 in file main.s
   Uses
      At line 238 in file main.s
      At line 269 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 62 in file main.s
   Uses
      At line 246 in file main.s
      At line 253 in file main.s

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 56 in file main.s
   Uses
      At line 76 in file main.s
Comment: SysTick_Init used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
External symbols

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 57 in file main.s
   Uses
      At line 180 in file main.s
      At line 241 in file main.s
      At line 249 in file main.s
      At line 256 in file main.s
      At line 272 in file main.s
      At line 306 in file main.s
      At line 365 in file main.s
      At line 373 in file main.s
      At line 385 in file main.s
      At line 403 in file main.s
      At line 430 in file main.s

print_tabuada 00000000

Symbol: print_tabuada
   Definitions
      At line 70 in file main.s
   Uses
      None
Comment: print_tabuada unused
update_tabuada 00000000

Symbol: update_tabuada
   Definitions
      At line 71 in file main.s
   Uses
      None
Comment: update_tabuada unused
14 symbols
403 symbols in table
