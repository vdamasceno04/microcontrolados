


ARM Macro Assembler    Page 1 


    1 00000000         ; lcd.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000         ; ------------------------------------------------------
                       -------------------------
   13 00000000         ; Área de Dados - Declarações de variáveis
   14 00000000                 AREA             DATA, ALIGN=2
   15 00000000         ; Se alguma variável for chamada em outro arquivo
   16 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   17 00000000         ; partir de outro arquivo
   18 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   19 00000000         ; de <tam> bytes a partir da primeira 
   20 00000000         ; posição da RAM  
   21 00000000         
   22 00000000         ; ------------------------------------------------------
                       -------------------------
   23 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   24 00000000         ;                  código
   25 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   26 00000000         
   27 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   28 00000000         ; EXPORT <func>    ; Permite chamar a função a partir de
                        outro arquivo
   29 00000000                 EXPORT           LCD_Init
   30 00000000                 EXPORT           LCD_Line2
   31 00000000                 EXPORT           LCD_PrintString
   32 00000000                 EXPORT           LCD_Reset
   33 00000000                 EXPORT           print_tabuada
   34 00000000                 EXPORT           print_numero
   35 00000000         
   36 00000000         ; Se chamar alguma função externa 
   37 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma função de outro
   38 00000000                 IMPORT           PortM_Output ; Permite chamar P
                                                            ortM_Output de outr
                                                            o arquivo
   39 00000000                 IMPORT           PortK_Output ; Permite chamar P
                                                            ortK_Output de outr
                                                            o arquivo
   40 00000000                 IMPORT           SysTick_Wait1ms ; Permite chama
                                                            r SysTick_Wait1ms d
                                                            e outro arquivo
   41 00000000         ; ------------------------------------------------------



ARM Macro Assembler    Page 2 


                       -------------------------
   42 00000000         ; Função LCD_Init
   43 00000000         ; Inicializa o LCD
   44 00000000         ; Parâmetro de entrada: Não tem
   45 00000000         ; Parâmetro de saída: Não tem
   46 00000000         LCD_Init
   47 00000000 B500            PUSH             {LR}
   48 00000002         
   49 00000002 F04F 0338       MOV              R3, #0x38   ; Inicializar no mo
                                                            do 2 linhas/caracte
                                                            r matriz 5x7
   50 00000006 F000 F80F       BL               LCD_Instruction
   51 0000000A         
   52 0000000A F04F 0306       MOV              R3, #0x06   ; Cursor com autoin
                                                            cremento para direi
                                                            ta
   53 0000000E F000 F80B       BL               LCD_Instruction
   54 00000012         
   55 00000012 F04F 030E       MOV              R3, #0x0E   ; Configurar o curs
                                                            or (habilitar o dis
                                                            play + cursor + não
                                                            -pisca)
   56 00000016 F000 F807       BL               LCD_Instruction
   57 0000001A         
   58 0000001A F04F 0301       MOV              R3, #0x01   ; Resetar: Limpar o
                                                             display e levar o 
                                                            cursor para o home
   59 0000001E F000 F803       BL               LCD_Instruction
   60 00000022         
   61 00000022 F85D EB04       POP              {LR}
   62 00000026 4770            BX               LR
   63 00000028         
   64 00000028         ; Função LCD_Instruction
   65 00000028         ; Recebe uma instrução e a executa
   66 00000028         ; Parâmetro de entrada: R3
   67 00000028         ; Parâmetro de saída: Não tem
   68 00000028         LCD_Instruction
   69 00000028 B500            PUSH             {LR}
   70 0000002A         
   71 0000002A F04F 0004       MOV              R0, #2_00000100 ; Ativa o modo 
                                                            de instrução (EN=1,
                                                             RW=0, RS=0)
   72 0000002E F7FF FFFE       BL               PortM_Output
   73 00000032         
   74 00000032 4618            MOV              R0, R3      ; Escreve no barram
                                                            ento de dados
   75 00000034 F7FF FFFE       BL               PortK_Output
   76 00000038         
   77 00000038 F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
   78 0000003C F7FF FFFE       BL               SysTick_Wait1ms
   79 00000040         
   80 00000040 F04F 0000       MOV              R0, #2_00000000 ; Desativa o mo
                                                            do de instrução (EN
                                                            =0, RW=0, RS=0)
   81 00000044 F7FF FFFE       BL               PortM_Output



ARM Macro Assembler    Page 3 


   82 00000048         
   83 00000048 F85D EB04       POP              {LR}
   84 0000004C 4770            BX               LR
   85 0000004E         
   86 0000004E         ; Função LCD_Data
   87 0000004E         ; Recebe um dado e o escreve
   88 0000004E         ; Parâmetro de entrada: R3
   89 0000004E         ; Parâmetro de saída: Não tem
   90 0000004E         LCD_Data
   91 0000004E B501            PUSH             {LR, R0}
   92 00000050         
   93 00000050 F04F 0005       MOV              R0, #2_00000101 ; Ativa o modo 
                                                            de dados (EN=1, RW=
                                                            0, RS=1)
   94 00000054 F7FF FFFE       BL               PortM_Output
   95 00000058         
   96 00000058 4618            MOV              R0, R3      ; Escreve no barram
                                                            ento de dados
   97 0000005A F7FF FFFE       BL               PortK_Output
   98 0000005E         
   99 0000005E F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  100 00000062 F7FF FFFE       BL               SysTick_Wait1ms
  101 00000066         
  102 00000066 F04F 0000       MOV              R0, #2_00000000 ; Desativa o mo
                                                            do de dados (EN=0, 
                                                            RW=0, RS=0)
  103 0000006A F7FF FFFE       BL               PortM_Output
  104 0000006E         
  105 0000006E E8BD 4001       POP              {LR, R0}
  106 00000072 4770            BX               LR
  107 00000074         
  108 00000074         ; Função LCD_Line2
  109 00000074         ; Prepara a escrita na segunda linha do LCD
  110 00000074         ; Parâmetro de entrada: Não tem
  111 00000074         ; Parâmetro de saída: Não tem
  112 00000074         LCD_Line2
  113 00000074 B509            PUSH             {LR, R0, R3}
  114 00000076         
  115 00000076 F04F 03C0       MOV              R3, #0xC0   ; Endereço da prime
                                                            ira posição - Segun
                                                            da Linha
  116 0000007A F7FF FFD5       BL               LCD_Instruction
  117 0000007E         
  118 0000007E F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  119 00000082 F7FF FFFE       BL               SysTick_Wait1ms
  120 00000086         
  121 00000086 E8BD 4009       POP              {LR, R0, R3}
  122 0000008A 4770            BX               LR
  123 0000008C         
  124 0000008C         ; Funções LCD_PrintString, LCD_PrintChar e LCD_EndOfStri
                       ng



ARM Macro Assembler    Page 4 


  125 0000008C         ; Imprimem uma string no LCD através de um loop
  126 0000008C         ; Parâmetro de entrada: R4 -> A string a ser escrita
  127 0000008C         ; Parâmetro de saída: Não tem
  128 0000008C         LCD_PrintString
  129 0000008C B519            PUSH             {LR, R0, R3, R4}
  130 0000008E         LCD_PrintChar
  131 0000008E F814 3B01       LDRB             R3, [R4], #1 ; Lê um caractere 
                                                            da string e desloca
                                                             para o próximo
  132 00000092         
  133 00000092 2B00            CMP              R3, #0      ; Verifica se chego
                                                            u no final da strin
                                                            g
  134 00000094 D002            BEQ              LCD_EndOfString
  135 00000096         
  136 00000096 F7FF FFDA       BL               LCD_Data    ; Escreve o caracte
                                                            re
  137 0000009A         
  138 0000009A E7F8            B                LCD_PrintChar ; Continua iteran
                                                            do sobre a string a
                                                            té chegar no fim
  139 0000009C         LCD_EndOfString
  140 0000009C F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  141 000000A0 F7FF FFFE       BL               SysTick_Wait1ms
  142 000000A4         
  143 000000A4 E8BD 4019       POP              {LR, R0, R3, R4} ; A string foi
                                                             escrita. Retorna
  144 000000A8 4770            BX               LR
  145 000000AA         
  146 000000AA         ; Função LCD_Reset
  147 000000AA         ; Limpa o display e leva o cursor para o home
  148 000000AA         ; Parâmetro de entrada: Não tem
  149 000000AA         ; Parâmetro de saída: Não tem
  150 000000AA         LCD_Reset
  151 000000AA B500            PUSH             {LR}
  152 000000AC         
  153 000000AC F04F 0301       MOV              R3, #0x01   ; Resetar: Limpar o
                                                             display e levar o 
                                                            cursor para o home
  154 000000B0 F7FF FFBA       BL               LCD_Instruction
  155 000000B4         
  156 000000B4 F04F 000A       MOV              R0, #10     ; Delay de 10ms par
                                                            a executar (bem mai
                                                            s do que os 40us ou
                                                             1,64ms necessários
                                                            )
  157 000000B8 F7FF FFFE       BL               SysTick_Wait1ms
  158 000000BC         
  159 000000BC F85D EB04       POP              {LR}
  160 000000C0 4770            BX               LR
  161 000000C2         
  162 000000C2         
  163 000000C2         ;Input: R0 = N, R1 = M
  164 000000C2         ;Output: -
  165 000000C2         print_tabuada



ARM Macro Assembler    Page 5 


  166 000000C2 B504            PUSH             {LR, R2}
  167 000000C4 FB00 F201       MUL              R2, R0, R1
  168 000000C8         ;ADD R2, R2, #0
  169 000000C8 4C33            LDR              R4, =TABUADA
  170 000000CA F7FF FFFE       BL               LCD_PrintString
  171 000000CE         
  172 000000CE F7FF FFFE       BL               print_numero
  173 000000D2 F7FF FFFE       BL               LCD_Line2
  174 000000D6         
  175 000000D6 F7FF FFFE       BL               print_numero
  176 000000DA         
  177 000000DA 4C30            LDR              R4,=X
  178 000000DC F7FF FFFE       BL               LCD_PrintString
  179 000000E0         
  180 000000E0 4608            MOV              R0, R1
  181 000000E2 F7FF FFFE       BL               print_numero
  182 000000E6         
  183 000000E6 4C2E            LDR              R4,=EQUAL
  184 000000E8 F7FF FFFE       BL               LCD_PrintString
  185 000000EC         
  186 000000EC 4610            MOV              R0, R2
  187 000000EE F7FF FFFE       BL               print_numero
  188 000000F2         
  189 000000F2 E8BD 4004       POP{LR,          R2}
  190 000000F6 4770            BX               LR
  191 000000F8         
  192 000000F8         ;Input: R0
  193 000000F8         ;Output: -
  194 000000F8         print_numero
  195 000000F8 B57F            PUSH             {LR, R0, R1, R2, R3, R4, R5, R6
} 
                                                            ; Salva registrador
                                                            es críticos
  196 000000FA 4601            MOV              R1, R0      ; R1 recebe o númer
                                                            o original
  197 000000FC 466D            MOV              R5, SP      ; R5 será usado com
                                                            o pilha auxiliar pa
                                                            ra armazenar os díg
                                                            itos
  198 000000FE F04F 060A       MOV              R6, #10     ; Divisor base 10
  199 00000102         
  200 00000102 2900            CMP              R1, #0      ; Verifica se o núm
                                                            ero é zero
  201 00000104 D00A            BEQ              handle_zero ; Tratamento especi
                                                            al para zero
  202 00000106         
  203 00000106         store_digits
  204 00000106 FB91 F0F6       SDIV             R0, R1, R6  ; R0 = R1 / 10 (par
                                                            te inteira)
  205 0000010A FB00 F206       MUL              R2, R0, R6  ; R2 = R0 * 10 (rec
                                                            alcula a parte inte
                                                            ira)
  206 0000010E EBA1 0302       SUB              R3, R1, R2  ; R3 = R1 % 10 (res
                                                            to da divisão, o dí
                                                            gito atual)
  207 00000112         
  208 00000112 B408            PUSH             {R3}        ; Empilha o dígito 
                                                            atual
  209 00000114 4601            MOV              R1, R0      ; Atualiza R1 com a



ARM Macro Assembler    Page 6 


                                                             parte inteira
  210 00000116 2900            CMP              R1, #0      ; Verifica se o núm
                                                            ero foi reduzido a 
                                                            0
  211 00000118 D1F5            BNE              store_digits ; Continua o laço 
                                                            se ainda há dígitos
                                                            
  212 0000011A         
  213 0000011A E003            B                print_digits ; Vai para a impre
                                                            ssão dos dígitos
  214 0000011C         
  215 0000011C         handle_zero
  216 0000011C F04F 0300       MOV              R3, #0      ; Coloca 0 em R3
  217 00000120 B408            PUSH             {R3}        ; Empilha o dígito 
                                                            0
  218 00000122 E7FF            B                print_digits ; Vai para a impre
                                                            ssão dos dígitos
  219 00000124         
  220 00000124         print_digits
  221 00000124 45AD            CMP              SP, R5      ; Verifica se todos
                                                             os dígitos foram d
                                                            esempilhados
  222 00000126 D022            BEQ              print_done  ; Sai se a pilha es
                                                            tá vazia
  223 00000128         
  224 00000128 BC08            POP              {R3}        ; Desempilha o próx
                                                            imo dígito
  225 0000012A 4C1E            LDR              R4, =DIGIT_9_STR ; Inicializa c
                                                            om "9" como padrão
  226 0000012C 2B00            CMP              R3, #0
  227 0000012E BF08 4C1D       LDREQ            R4, =DIGIT_0_STR
  228 00000132 2B01            CMP              R3, #1
  229 00000134 BF08 4C1D       LDREQ            R4, =DIGIT_1_STR
  230 00000138 2B02            CMP              R3, #2
  231 0000013A BF08 4C1C       LDREQ            R4, =DIGIT_2_STR
  232 0000013E 2B03            CMP              R3, #3
  233 00000140 BF08 4C1C       LDREQ            R4, =DIGIT_3_STR
  234 00000144 2B04            CMP              R3, #4
  235 00000146 BF08 4C1B       LDREQ            R4, =DIGIT_4_STR
  236 0000014A 2B05            CMP              R3, #5
  237 0000014C BF08 4C1B       LDREQ            R4, =DIGIT_5_STR
  238 00000150 2B06            CMP              R3, #6
  239 00000152 BF08 4C1A       LDREQ            R4, =DIGIT_6_STR
  240 00000156 2B07            CMP              R3, #7
  241 00000158 BF08 4C1A       LDREQ            R4, =DIGIT_7_STR
  242 0000015C 2B08            CMP              R3, #8
  243 0000015E BF08 4C19       LDREQ            R4, =DIGIT_8_STR
  244 00000162 2B09            CMP              R3, #9
  245 00000164 BF08 4C0F       LDREQ            R4, =DIGIT_9_STR
  246 00000168         
  247 00000168 F7FF FFFE       BL               LCD_PrintString ; Imprime o díg
                                                            ito correspondente
  248 0000016C E7DA            B                print_digits ; Continua o desem
                                                            pilhamento
  249 0000016E         
  250 0000016E         print_done
  251 0000016E E8BD 407F       POP              {LR, R0, R1, R2, R3, R4, R5, R6
} 
                                                            ; Restaura registra



ARM Macro Assembler    Page 7 


                                                            dores
  252 00000172 4770            BX               LR          ; Retorna
  253 00000174         
  254 00000174         
  255 00000174         
  256 00000174         ; Definição dos textos do LCD
  257 00000174 30 00   DIGIT_0_STR
                               DCB              "0", 0
  258 00000176 31 00   DIGIT_1_STR
                               DCB              "1", 0
  259 00000178 32 00   DIGIT_2_STR
                               DCB              "2", 0
  260 0000017A 33 00   DIGIT_3_STR
                               DCB              "3", 0
  261 0000017C 34 00   DIGIT_4_STR
                               DCB              "4", 0
  262 0000017E 35 00   DIGIT_5_STR
                               DCB              "5", 0
  263 00000180 36 00   DIGIT_6_STR
                               DCB              "6", 0
  264 00000182 37 00   DIGIT_7_STR
                               DCB              "7", 0
  265 00000184 38 00   DIGIT_8_STR
                               DCB              "8", 0
  266 00000186 39 00   DIGIT_9_STR
                               DCB              "9", 0
  267 00000188 54 61 62 
              75 61 64 
              61 20 64 
              6F 20 00 TABUADA DCB              "Tabuada do ",  0
  268 00000194 78 00   X       DCB              "x",0
  269 00000196 3D 00   EQUAL   DCB              "=",0
  270 00000198         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  271 00000198         ; Fim do Arquivo
  272 00000198         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  273 00000198                 ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  274 00000198                 END                          ;Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\lcd.d -o.\objects\lcd.o -IC:\Users\victo\AppData\L



ARM Macro Assembler    Page 8 


ocal\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 --predefine="__EVAL S
ETA 1" --predefine="__UVISION_VERSION SETA 536" --predefine="TM4C1294NCPDT SETA
 1" --list=.\listings\lcd.lst lcd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 14 in file lcd.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 25 in file lcd.s
   Uses
      None
Comment: .text unused
DIGIT_0_STR 00000174

Symbol: DIGIT_0_STR
   Definitions
      At line 257 in file lcd.s
   Uses
      At line 227 in file lcd.s
Comment: DIGIT_0_STR used once
DIGIT_1_STR 00000176

Symbol: DIGIT_1_STR
   Definitions
      At line 258 in file lcd.s
   Uses
      At line 229 in file lcd.s
Comment: DIGIT_1_STR used once
DIGIT_2_STR 00000178

Symbol: DIGIT_2_STR
   Definitions
      At line 259 in file lcd.s
   Uses
      At line 231 in file lcd.s
Comment: DIGIT_2_STR used once
DIGIT_3_STR 0000017A

Symbol: DIGIT_3_STR
   Definitions
      At line 260 in file lcd.s
   Uses
      At line 233 in file lcd.s
Comment: DIGIT_3_STR used once
DIGIT_4_STR 0000017C

Symbol: DIGIT_4_STR
   Definitions
      At line 261 in file lcd.s
   Uses
      At line 235 in file lcd.s
Comment: DIGIT_4_STR used once
DIGIT_5_STR 0000017E

Symbol: DIGIT_5_STR
   Definitions
      At line 262 in file lcd.s
   Uses
      At line 237 in file lcd.s
Comment: DIGIT_5_STR used once
DIGIT_6_STR 00000180

Symbol: DIGIT_6_STR



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 263 in file lcd.s
   Uses
      At line 239 in file lcd.s
Comment: DIGIT_6_STR used once
DIGIT_7_STR 00000182

Symbol: DIGIT_7_STR
   Definitions
      At line 264 in file lcd.s
   Uses
      At line 241 in file lcd.s
Comment: DIGIT_7_STR used once
DIGIT_8_STR 00000184

Symbol: DIGIT_8_STR
   Definitions
      At line 265 in file lcd.s
   Uses
      At line 243 in file lcd.s
Comment: DIGIT_8_STR used once
DIGIT_9_STR 00000186

Symbol: DIGIT_9_STR
   Definitions
      At line 266 in file lcd.s
   Uses
      At line 225 in file lcd.s
      At line 245 in file lcd.s

EQUAL 00000196

Symbol: EQUAL
   Definitions
      At line 269 in file lcd.s
   Uses
      At line 183 in file lcd.s
Comment: EQUAL used once
LCD_Data 0000004E

Symbol: LCD_Data
   Definitions
      At line 90 in file lcd.s
   Uses
      At line 136 in file lcd.s
Comment: LCD_Data used once
LCD_EndOfString 0000009C

Symbol: LCD_EndOfString
   Definitions
      At line 139 in file lcd.s
   Uses
      At line 134 in file lcd.s
Comment: LCD_EndOfString used once
LCD_Init 00000000

Symbol: LCD_Init
   Definitions
      At line 46 in file lcd.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 29 in file lcd.s
Comment: LCD_Init used once
LCD_Instruction 00000028

Symbol: LCD_Instruction
   Definitions
      At line 68 in file lcd.s
   Uses
      At line 50 in file lcd.s
      At line 53 in file lcd.s
      At line 56 in file lcd.s
      At line 59 in file lcd.s
      At line 116 in file lcd.s
      At line 154 in file lcd.s

LCD_Line2 00000074

Symbol: LCD_Line2
   Definitions
      At line 112 in file lcd.s
   Uses
      At line 30 in file lcd.s
      At line 173 in file lcd.s

LCD_PrintChar 0000008E

Symbol: LCD_PrintChar
   Definitions
      At line 130 in file lcd.s
   Uses
      At line 138 in file lcd.s
Comment: LCD_PrintChar used once
LCD_PrintString 0000008C

Symbol: LCD_PrintString
   Definitions
      At line 128 in file lcd.s
   Uses
      At line 31 in file lcd.s
      At line 170 in file lcd.s
      At line 178 in file lcd.s
      At line 184 in file lcd.s
      At line 247 in file lcd.s

LCD_Reset 000000AA

Symbol: LCD_Reset
   Definitions
      At line 150 in file lcd.s
   Uses
      At line 32 in file lcd.s
Comment: LCD_Reset used once
TABUADA 00000188

Symbol: TABUADA
   Definitions
      At line 267 in file lcd.s
   Uses



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 169 in file lcd.s
Comment: TABUADA used once
X 00000194

Symbol: X
   Definitions
      At line 268 in file lcd.s
   Uses
      At line 177 in file lcd.s
Comment: X used once
handle_zero 0000011C

Symbol: handle_zero
   Definitions
      At line 215 in file lcd.s
   Uses
      At line 201 in file lcd.s
Comment: handle_zero used once
print_digits 00000124

Symbol: print_digits
   Definitions
      At line 220 in file lcd.s
   Uses
      At line 213 in file lcd.s
      At line 218 in file lcd.s
      At line 248 in file lcd.s

print_done 0000016E

Symbol: print_done
   Definitions
      At line 250 in file lcd.s
   Uses
      At line 222 in file lcd.s
Comment: print_done used once
print_numero 000000F8

Symbol: print_numero
   Definitions
      At line 194 in file lcd.s
   Uses
      At line 34 in file lcd.s
      At line 172 in file lcd.s
      At line 175 in file lcd.s
      At line 181 in file lcd.s
      At line 187 in file lcd.s

print_tabuada 000000C2

Symbol: print_tabuada
   Definitions
      At line 165 in file lcd.s
   Uses
      At line 33 in file lcd.s
Comment: print_tabuada used once
store_digits 00000106

Symbol: store_digits



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 203 in file lcd.s
   Uses
      At line 211 in file lcd.s
Comment: store_digits used once
28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 39 in file lcd.s
   Uses
      At line 75 in file lcd.s
      At line 97 in file lcd.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 38 in file lcd.s
   Uses
      At line 72 in file lcd.s
      At line 81 in file lcd.s
      At line 94 in file lcd.s
      At line 103 in file lcd.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 40 in file lcd.s
   Uses
      At line 78 in file lcd.s
      At line 100 in file lcd.s
      At line 119 in file lcd.s
      At line 141 in file lcd.s
      At line 157 in file lcd.s

3 symbols
368 symbols in table
