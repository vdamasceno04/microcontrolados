


ARM Macro Assembler    Page 1 


    1 00000000         ; matrix_keyboard.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000 00000004 
                       CLOSING EQU              4
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; Área de Dados - Declarações de variáveis
   15 00000000                 AREA             DATA, ALIGN=2
   16 00000000         ; Se alguma variável for chamada em outro arquivo
   17 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   18 00000000         ; partir de outro arquivo
   19 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   20 00000000         ; de <tam> bytes a partir da primeira 
   21 00000000         ; posição da RAM  
   22 00000000         
   23 00000000         ; ------------------------------------------------------
                       -------------------------
   24 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   25 00000000         ;                  código
   26 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000         
   28 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   29 00000000         ; EXPORT <func>    ; Permite chamar a função a partir de
                        outro arquivo
   30 00000000                 EXPORT           MapMatrixKeyboard
   31 00000000                 EXPORT           update_tabuada
   32 00000000         
   33 00000000         ; Se chamar alguma função externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma função de outro
   35 00000000                 IMPORT           PortM_Output
   36 00000000                 IMPORT           PortL_Input
   37 00000000                 IMPORT           LCD_PrintString
   38 00000000                 IMPORT           SysTick_Wait1ms
   39 00000000                 IMPORT           print_tabuada
   40 00000000                 IMPORT           print_numero
   41 00000000         
   42 00000000 20000A00 
                       start_mem
                               EQU              0x20000A00
   43 00000000         
   44 00000000         ; Função MapMatrixKeyboard



ARM Macro Assembler    Page 2 


   45 00000000         ; Mapeia o teclado matricial
   46 00000000         ; Parâmetro de entrada:
   47 00000000         ; Parâmetro de saída:
   48 00000000         MapMatrixKeyboard
   49 00000000 B500            PUSH             {LR}
   50 00000002         
   51 00000002         ; ------------------------------------------------------
                       -----
   52 00000002 F04F 00E0       MOV              R0, #2_11100000 ; Iterando sobr
                                                            e a primeira coluna
                                                            
   53 00000006 F7FF FFFE       BL               PortM_Output
   54 0000000A F7FF FFFE       BL               PortL_Input
   55 0000000E         
   56 0000000E 280E            CMP              R0, #2_1110 ; Número 1 foi pres
                                                            sionado
   57 00000010 D034            BEQ              DIGIT_1
   58 00000012         
   59 00000012 280D            CMP              R0, #2_1101 ; Número 4 foi pres
                                                            sionado
   60 00000014 D059            BEQ              DIGIT_4
   61 00000016         
   62 00000016 280B            CMP              R0, #2_1011 ; Número 7 foi pres
                                                            sionado
   63 00000018 F000 807E       BEQ.W            DIGIT_7
   64 0000001C         
   65 0000001C 2807            CMP              R0, #2_0111 ; Símbolo * foi pre
                                                            ssionado
   66 0000001E F000 80A2       BEQ.W            DIGIT_AST   ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
   67 00000022         ; ------------------------------------------------------
                       -----
   68 00000022         
   69 00000022         ; ------------------------------------------------------
                       -----
   70 00000022 F04F 00D0       MOV              R0, #2_11010000 ; Iterando sobr
                                                            e a segunda coluna
   71 00000026 F7FF FFFE       BL               PortM_Output
   72 0000002A F7FF FFFE       BL               PortL_Input
   73 0000002E         
   74 0000002E 280E            CMP              R0, #2_1110 ; Número 2 foi pres
                                                            sionado
   75 00000030 D031            BEQ              DIGIT_2
   76 00000032         
   77 00000032 280D            CMP              R0, #2_1101 ; Número 5 foi pres
                                                            sionado
   78 00000034 D056            BEQ              DIGIT_5
   79 00000036         
   80 00000036 280B            CMP              R0, #2_1011 ; Número 8 foi pres
                                                            sionado
   81 00000038 D07B            BEQ              DIGIT_8
   82 0000003A         
   83 0000003A 2807            CMP              R0, #2_0111 ; Número 0 foi pres
                                                            sionado
   84 0000003C D011            BEQ              DIGIT_0
   85 0000003E         ; ------------------------------------------------------
                       -----



ARM Macro Assembler    Page 3 


   86 0000003E         
   87 0000003E         ; ------------------------------------------------------
                       -----
   88 0000003E F04F 00B0       MOV              R0, #2_10110000 ; Iterando sobr
                                                            e a terceira coluna
                                                            
   89 00000042 F7FF FFFE       BL               PortM_Output
   90 00000046 F7FF FFFE       BL               PortL_Input
   91 0000004A         
   92 0000004A 280E            CMP              R0, #2_1110 ; Número 3 foi pres
                                                            sionado
   93 0000004C D030            BEQ              DIGIT_3
   94 0000004E         
   95 0000004E 280D            CMP              R0, #2_1101 ; Número 6 foi pres
                                                            sionado
   96 00000050 D055            BEQ              DIGIT_6
   97 00000052         
   98 00000052 280B            CMP              R0, #2_1011 ; Número 9 foi pres
                                                            sionado
   99 00000054 D07A            BEQ              DIGIT_9
  100 00000056         
  101 00000056 2807            CMP              R0, #2_0111 ; Símbolo # foi pre
                                                            ssionado
  102 00000058 F000 8092       BEQ.W            DIGIT_HASH  ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
  103 0000005C         ; ------------------------------------------------------
                       -----
  104 0000005C         
  105 0000005C F85D EB04       POP              {LR}
  106 00000060 4770            BX               LR
  107 00000062         
  108 00000062         ; Funções DIGIT_X
  109 00000062         ; Tratam a resposta do sistema para cada tecla pressiona
                       da
  110 00000062         ; Parâmetro de entrada: Não tem
  111 00000062         ; Parâmetro de saída: R6 -> O dígito inserido
  112 00000062         DIGIT_0
  113 00000062 B500            PUSH             {LR}
  114 00000064         
  115 00000064 F04F 0600       MOV              R6, #0x0    ; Guarda o dígito i
                                                            nserido
  116 00000068         
  117 00000068 4C5C            LDR              R4, =DIGIT_0_STR ; Imprime o dí
                                                            gito no LCD
  118 0000006A F7FF FFFE       BL               LCD_PrintString
  119 0000006E         
  120 0000006E F000 F890       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  121 00000072         
  122 00000072 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  123 00000076         
  124 00000076 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres



ARM Macro Assembler    Page 4 


                                                            so
  125 0000007A 4770            BX               LR
  126 0000007C         
  127 0000007C         DIGIT_1
  128 0000007C B500            PUSH             {LR}
  129 0000007E         
  130 0000007E F04F 0601       MOV              R6, #0x1    ; Guarda o dígito i
                                                            nserido
  131 00000082         
  132 00000082 4C57            LDR              R4, =DIGIT_1_STR ; Imprime o dí
                                                            gito no LCD
  133 00000084 F7FF FFFE       BL               LCD_PrintString
  134 00000088         
  135 00000088 F000 F883       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  136 0000008C         
  137 0000008C F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  138 00000090         
  139 00000090 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  140 00000094 4770            BX               LR
  141 00000096         
  142 00000096         DIGIT_2
  143 00000096 B500            PUSH             {LR}
  144 00000098         
  145 00000098 F04F 0602       MOV              R6, #0x2    ; Guarda o dígito i
                                                            nserido
  146 0000009C         
  147 0000009C 4C51            LDR              R4, =DIGIT_2_STR ; Imprime o dí
                                                            gito no LCD
  148 0000009E F7FF FFFE       BL               LCD_PrintString
  149 000000A2         
  150 000000A2 F000 F876       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  151 000000A6         
  152 000000A6 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  153 000000AA         
  154 000000AA F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  155 000000AE 4770            BX               LR
  156 000000B0         
  157 000000B0         DIGIT_3
  158 000000B0 B500            PUSH             {LR}
  159 000000B2         
  160 000000B2 F04F 0603       MOV              R6, #0x3    ; Guarda o dígito i
                                                            nserido
  161 000000B6         
  162 000000B6 4C4C            LDR              R4, =DIGIT_3_STR ; Imprime o dí
                                                            gito no LCD



ARM Macro Assembler    Page 5 


  163 000000B8 F7FF FFFE       BL               LCD_PrintString
  164 000000BC         
  165 000000BC F000 F869       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  166 000000C0         
  167 000000C0 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  168 000000C4         
  169 000000C4 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  170 000000C8 4770            BX               LR
  171 000000CA         
  172 000000CA         DIGIT_4
  173 000000CA B500            PUSH             {LR}
  174 000000CC         
  175 000000CC F04F 0604       MOV              R6, #0x4    ; Guarda o dígito i
                                                            nserido
  176 000000D0         
  177 000000D0 4C46            LDR              R4, =DIGIT_4_STR ; Imprime o dí
                                                            gito no LCD
  178 000000D2 F7FF FFFE       BL               LCD_PrintString
  179 000000D6         
  180 000000D6 F000 F85C       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  181 000000DA         
  182 000000DA F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  183 000000DE         
  184 000000DE F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  185 000000E2 4770            BX               LR
  186 000000E4         
  187 000000E4         DIGIT_5
  188 000000E4 B500            PUSH             {LR}
  189 000000E6         
  190 000000E6 F04F 0605       MOV              R6, #0x5    ; Guarda o dígito i
                                                            nserido
  191 000000EA         
  192 000000EA 4C41            LDR              R4, =DIGIT_5_STR ; Imprime o dí
                                                            gito no LCD
  193 000000EC F7FF FFFE       BL               LCD_PrintString
  194 000000F0         
  195 000000F0 F000 F84F       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  196 000000F4         
  197 000000F4 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  198 000000F8         
  199 000000F8 F85D EB04       POP              {LR}        ; Retorna após dígi



ARM Macro Assembler    Page 6 


                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  200 000000FC 4770            BX               LR
  201 000000FE         
  202 000000FE         DIGIT_6
  203 000000FE B500            PUSH             {LR}
  204 00000100         
  205 00000100 F04F 0606       MOV              R6, #0x6    ; Guarda o dígito i
                                                            nserido
  206 00000104         
  207 00000104 4C3B            LDR              R4, =DIGIT_6_STR ; Imprime o dí
                                                            gito no LCD
  208 00000106 F7FF FFFE       BL               LCD_PrintString
  209 0000010A         
  210 0000010A F000 F842       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  211 0000010E         
  212 0000010E F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  213 00000112         
  214 00000112 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  215 00000116 4770            BX               LR
  216 00000118         
  217 00000118         DIGIT_7
  218 00000118 B500            PUSH             {LR}
  219 0000011A         
  220 0000011A F04F 0607       MOV              R6, #0x7    ; Guarda o dígito i
                                                            nserido
  221 0000011E         
  222 0000011E 4C36            LDR              R4, =DIGIT_7_STR ; Imprime o dí
                                                            gito no LCD
  223 00000120 F7FF FFFE       BL               LCD_PrintString
  224 00000124         
  225 00000124 F000 F835       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  226 00000128         
  227 00000128 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  228 0000012C         
  229 0000012C F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  230 00000130 4770            BX               LR
  231 00000132         
  232 00000132         DIGIT_8
  233 00000132 B500            PUSH             {LR}
  234 00000134         
  235 00000134 F04F 0608       MOV              R6, #0x8    ; Guarda o dígito i
                                                            nserido
  236 00000138         



ARM Macro Assembler    Page 7 


  237 00000138 4C30            LDR              R4, =DIGIT_8_STR ; Imprime o dí
                                                            gito no LCD
  238 0000013A F7FF FFFE       BL               LCD_PrintString
  239 0000013E         
  240 0000013E F000 F828       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  241 00000142         
  242 00000142 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  243 00000146         
  244 00000146 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  245 0000014A 4770            BX               LR
  246 0000014C         
  247 0000014C         DIGIT_9
  248 0000014C B500            PUSH             {LR}
  249 0000014E         
  250 0000014E F04F 0609       MOV              R6, #0x9    ; Guarda o dígito i
                                                            nserido
  251 00000152         
  252 00000152 4C2B            LDR              R4, =DIGIT_9_STR ; Imprime o dí
                                                            gito no LCD
  253 00000154 F7FF FFFE       BL               LCD_PrintString
  254 00000158         
  255 00000158 F000 F81B       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  256 0000015C         
  257 0000015C F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  258 00000160         
  259 00000160 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  260 00000164 4770            BX               LR
  261 00000166         
  262 00000166         DIGIT_AST
  263 00000166 B500            PUSH             {LR}
  264 00000168         
  265 00000168 F04F 060E       MOV              R6, #0xE    ; Guarda o dígito i
                                                            nserido
  266 0000016C         
  267 0000016C 4C25            LDR              R4, =DIGIT_AST_STR ; Imprime o 
                                                            dígito no LCD
  268 0000016E F7FF FFFE       BL               LCD_PrintString
  269 00000172         
  270 00000172 F000 F80E       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  271 00000176         
  272 00000176 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos



ARM Macro Assembler    Page 8 


  273 0000017A         
  274 0000017A F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  275 0000017E 4770            BX               LR
  276 00000180         
  277 00000180         DIGIT_HASH
  278 00000180 B500            PUSH             {LR}
  279 00000182         
  280 00000182 2F04            CMP              R7, #4      ; Verifica se 4 díg
                                                            itos já foram inser
                                                            idos
  281 00000184 BF28 2504       MOVHS            R5, #CLOSING ; Senha de 4 dígit
                                                            os inserida, coloca
                                                             o cofre em process
                                                            o de fechamento
  282 00000188         
  283 00000188 F000 F803       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  284 0000018C         
  285 0000018C F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  286 00000190 4770            BX               LR
  287 00000192         
  288 00000192         ; Função Debouncing
  289 00000192         ; Trata o bouncing da tecla aguardando um tempo fixo (0,
                       5s)
  290 00000192         ; Parâmetro de entrada: Não tem
  291 00000192         ; Parâmetro de saída: Não tem
  292 00000192         Debouncing
  293 00000192 B500            PUSH             {LR}
  294 00000194         
  295 00000194 F44F 70FA       MOV              R0, #500
  296 00000198 F7FF FFFE       BL               SysTick_Wait1ms
  297 0000019C         
  298 0000019C F85D EB04       POP              {LR}
  299 000001A0 4770            BX               LR
  300 000001A2         
  301 000001A2         
  302 000001A2         ;Input: R0 N
  303 000001A2         ;Output R0 = N, R1 = M
  304 000001A2         update_tabuada
  305 000001A2 B51C            PUSH             {LR ,R2, R3, R4}
  306 000001A4         
  307 000001A4 F04F 0404       MOV              R4, #4
  308 000001A8 4917            LDR              R1, =start_mem
  309 000001AA FB04 1200       MLA              R2, R4, R0, R1
  310 000001AE         
  311 000001AE 6813            LDR              R3, [R2]
  312 000001B0 F103 0301       ADD              R3, #1
  313 000001B4         
  314 000001B4 2B09            CMP              R3, #9
  315 000001B6 BFC8 2300       MOVGT            R3, #0
  316 000001BA         
  317 000001BA 6013            STR              R3, [R2]



ARM Macro Assembler    Page 9 


  318 000001BC         
  319 000001BC 4619            MOV              R1, R3
  320 000001BE E8BD 401C       POP              {LR ,R2, R3, R4}
  321 000001C2         
  322 000001C2 4770            BX               LR
  323 000001C4         
  324 000001C4         ; Definição dos textos do LCD
  325 000001C4 30 00   DIGIT_0_STR
                               DCB              "0", 0
  326 000001C6 31 00   DIGIT_1_STR
                               DCB              "1", 0
  327 000001C8 32 00   DIGIT_2_STR
                               DCB              "2", 0
  328 000001CA 33 00   DIGIT_3_STR
                               DCB              "3", 0
  329 000001CC 34 00   DIGIT_4_STR
                               DCB              "4", 0
  330 000001CE 35 00   DIGIT_5_STR
                               DCB              "5", 0
  331 000001D0 36 00   DIGIT_6_STR
                               DCB              "6", 0
  332 000001D2 37 00   DIGIT_7_STR
                               DCB              "7", 0
  333 000001D4 38 00   DIGIT_8_STR
                               DCB              "8", 0
  334 000001D6 39 00   DIGIT_9_STR
                               DCB              "9", 0
  335 000001D8         
  336 000001D8 2A 00   DIGIT_AST_STR
                               DCB              "*", 0
  337 000001DA         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  338 000001DA         ; Fim do Arquivo
  339 000001DA         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  340 000001DA 00 00           ALIGN                        ; Garante que o fim
                                                             da seção está alin
                                                            hada 
  341 000001DC                 END                          ; Fim do arquivo
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              20000A00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\objects\matrix_keyboard.d -o.\objects\matrix_keyboard.o -I
C:\Users\victo\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C1
29 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --prede
fine="TM4C1294NCPDT SETA 1" --list=.\listings\matrix_keyboard.lst matrix_keyboa
rd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 15 in file matrix_keyboard.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 26 in file matrix_keyboard.s
   Uses
      None
Comment: .text unused
DIGIT_0 00000062

Symbol: DIGIT_0
   Definitions
      At line 112 in file matrix_keyboard.s
   Uses
      At line 84 in file matrix_keyboard.s
Comment: DIGIT_0 used once
DIGIT_0_STR 000001C4

Symbol: DIGIT_0_STR
   Definitions
      At line 325 in file matrix_keyboard.s
   Uses
      At line 117 in file matrix_keyboard.s
Comment: DIGIT_0_STR used once
DIGIT_1 0000007C

Symbol: DIGIT_1
   Definitions
      At line 127 in file matrix_keyboard.s
   Uses
      At line 57 in file matrix_keyboard.s
Comment: DIGIT_1 used once
DIGIT_1_STR 000001C6

Symbol: DIGIT_1_STR
   Definitions
      At line 326 in file matrix_keyboard.s
   Uses
      At line 132 in file matrix_keyboard.s
Comment: DIGIT_1_STR used once
DIGIT_2 00000096

Symbol: DIGIT_2
   Definitions
      At line 142 in file matrix_keyboard.s
   Uses
      At line 75 in file matrix_keyboard.s
Comment: DIGIT_2 used once
DIGIT_2_STR 000001C8

Symbol: DIGIT_2_STR
   Definitions
      At line 327 in file matrix_keyboard.s
   Uses
      At line 147 in file matrix_keyboard.s
Comment: DIGIT_2_STR used once
DIGIT_3 000000B0

Symbol: DIGIT_3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 157 in file matrix_keyboard.s
   Uses
      At line 93 in file matrix_keyboard.s
Comment: DIGIT_3 used once
DIGIT_3_STR 000001CA

Symbol: DIGIT_3_STR
   Definitions
      At line 328 in file matrix_keyboard.s
   Uses
      At line 162 in file matrix_keyboard.s
Comment: DIGIT_3_STR used once
DIGIT_4 000000CA

Symbol: DIGIT_4
   Definitions
      At line 172 in file matrix_keyboard.s
   Uses
      At line 60 in file matrix_keyboard.s
Comment: DIGIT_4 used once
DIGIT_4_STR 000001CC

Symbol: DIGIT_4_STR
   Definitions
      At line 329 in file matrix_keyboard.s
   Uses
      At line 177 in file matrix_keyboard.s
Comment: DIGIT_4_STR used once
DIGIT_5 000000E4

Symbol: DIGIT_5
   Definitions
      At line 187 in file matrix_keyboard.s
   Uses
      At line 78 in file matrix_keyboard.s
Comment: DIGIT_5 used once
DIGIT_5_STR 000001CE

Symbol: DIGIT_5_STR
   Definitions
      At line 330 in file matrix_keyboard.s
   Uses
      At line 192 in file matrix_keyboard.s
Comment: DIGIT_5_STR used once
DIGIT_6 000000FE

Symbol: DIGIT_6
   Definitions
      At line 202 in file matrix_keyboard.s
   Uses
      At line 96 in file matrix_keyboard.s
Comment: DIGIT_6 used once
DIGIT_6_STR 000001D0

Symbol: DIGIT_6_STR
   Definitions
      At line 331 in file matrix_keyboard.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 207 in file matrix_keyboard.s
Comment: DIGIT_6_STR used once
DIGIT_7 00000118

Symbol: DIGIT_7
   Definitions
      At line 217 in file matrix_keyboard.s
   Uses
      At line 63 in file matrix_keyboard.s
Comment: DIGIT_7 used once
DIGIT_7_STR 000001D2

Symbol: DIGIT_7_STR
   Definitions
      At line 332 in file matrix_keyboard.s
   Uses
      At line 222 in file matrix_keyboard.s
Comment: DIGIT_7_STR used once
DIGIT_8 00000132

Symbol: DIGIT_8
   Definitions
      At line 232 in file matrix_keyboard.s
   Uses
      At line 81 in file matrix_keyboard.s
Comment: DIGIT_8 used once
DIGIT_8_STR 000001D4

Symbol: DIGIT_8_STR
   Definitions
      At line 333 in file matrix_keyboard.s
   Uses
      At line 237 in file matrix_keyboard.s
Comment: DIGIT_8_STR used once
DIGIT_9 0000014C

Symbol: DIGIT_9
   Definitions
      At line 247 in file matrix_keyboard.s
   Uses
      At line 99 in file matrix_keyboard.s
Comment: DIGIT_9 used once
DIGIT_9_STR 000001D6

Symbol: DIGIT_9_STR
   Definitions
      At line 334 in file matrix_keyboard.s
   Uses
      At line 252 in file matrix_keyboard.s
Comment: DIGIT_9_STR used once
DIGIT_AST 00000166

Symbol: DIGIT_AST
   Definitions
      At line 262 in file matrix_keyboard.s
   Uses
      At line 66 in file matrix_keyboard.s
Comment: DIGIT_AST used once
DIGIT_AST_STR 000001D8



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: DIGIT_AST_STR
   Definitions
      At line 336 in file matrix_keyboard.s
   Uses
      At line 267 in file matrix_keyboard.s
Comment: DIGIT_AST_STR used once
DIGIT_HASH 00000180

Symbol: DIGIT_HASH
   Definitions
      At line 277 in file matrix_keyboard.s
   Uses
      At line 102 in file matrix_keyboard.s
Comment: DIGIT_HASH used once
Debouncing 00000192

Symbol: Debouncing
   Definitions
      At line 292 in file matrix_keyboard.s
   Uses
      At line 120 in file matrix_keyboard.s
      At line 135 in file matrix_keyboard.s
      At line 150 in file matrix_keyboard.s
      At line 165 in file matrix_keyboard.s
      At line 180 in file matrix_keyboard.s
      At line 195 in file matrix_keyboard.s
      At line 210 in file matrix_keyboard.s
      At line 225 in file matrix_keyboard.s
      At line 240 in file matrix_keyboard.s
      At line 255 in file matrix_keyboard.s
      At line 270 in file matrix_keyboard.s
      At line 283 in file matrix_keyboard.s

MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 48 in file matrix_keyboard.s
   Uses
      At line 30 in file matrix_keyboard.s
Comment: MapMatrixKeyboard used once
update_tabuada 000001A2

Symbol: update_tabuada
   Definitions
      At line 304 in file matrix_keyboard.s
   Uses
      At line 31 in file matrix_keyboard.s
Comment: update_tabuada used once
27 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CLOSING 00000004

Symbol: CLOSING
   Definitions
      At line 12 in file matrix_keyboard.s
   Uses
      At line 281 in file matrix_keyboard.s
Comment: CLOSING used once
start_mem 20000A00

Symbol: start_mem
   Definitions
      At line 42 in file matrix_keyboard.s
   Uses
      At line 308 in file matrix_keyboard.s
Comment: start_mem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 37 in file matrix_keyboard.s
   Uses
      At line 118 in file matrix_keyboard.s
      At line 133 in file matrix_keyboard.s
      At line 148 in file matrix_keyboard.s
      At line 163 in file matrix_keyboard.s
      At line 178 in file matrix_keyboard.s
      At line 193 in file matrix_keyboard.s
      At line 208 in file matrix_keyboard.s
      At line 223 in file matrix_keyboard.s
      At line 238 in file matrix_keyboard.s
      At line 253 in file matrix_keyboard.s
      At line 268 in file matrix_keyboard.s

PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 36 in file matrix_keyboard.s
   Uses
      At line 54 in file matrix_keyboard.s
      At line 72 in file matrix_keyboard.s
      At line 90 in file matrix_keyboard.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 35 in file matrix_keyboard.s
   Uses
      At line 53 in file matrix_keyboard.s
      At line 71 in file matrix_keyboard.s
      At line 89 in file matrix_keyboard.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 38 in file matrix_keyboard.s
   Uses
      At line 296 in file matrix_keyboard.s
Comment: SysTick_Wait1ms used once
print_numero 00000000

Symbol: print_numero
   Definitions
      At line 40 in file matrix_keyboard.s
   Uses
      None
Comment: print_numero unused
print_tabuada 00000000

Symbol: print_tabuada
   Definitions
      At line 39 in file matrix_keyboard.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Uses
      None
Comment: print_tabuada unused
6 symbols
372 symbols in table
