


ARM Macro Assembler    Page 1 


    1 00000000         ; matrix_keyboard.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Template by Prof. Guilherme Peron - 24/08/2020
    4 00000000         
    5 00000000         ; ------------------------------------------------------
                       -------------------------
    6 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
    7 00000000         ; ------------------------------------------------------
                       -------------------------
    8 00000000         
    9 00000000         ; Declarações EQU - Defines
   10 00000000         ;<NOME>         EQU <VALOR>
   11 00000000         ; ========================
   12 00000000 00000004 
                       CLOSING EQU              4
   13 00000000         ; ------------------------------------------------------
                       -------------------------
   14 00000000         ; Área de Dados - Declarações de variáveis
   15 00000000                 AREA             DATA, ALIGN=2
   16 00000000         ; Se alguma variável for chamada em outro arquivo
   17 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   18 00000000         ; partir de outro arquivo
   19 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   20 00000000         ; de <tam> bytes a partir da primeira 
   21 00000000         ; posição da RAM  
   22 00000000         
   23 00000000         ; ------------------------------------------------------
                       -------------------------
   24 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   25 00000000         ;                  código
   26 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   27 00000000         
   28 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo
   29 00000000         ; EXPORT <func>    ; Permite chamar a função a partir de
                        outro arquivo
   30 00000000                 EXPORT           MapMatrixKeyboard
   31 00000000                 EXPORT           update_tabuada
   32 00000000         
   33 00000000         ; Se chamar alguma função externa 
   34 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma função de outro
   35 00000000                 IMPORT           PortM_Output
   36 00000000                 IMPORT           PortL_Input
   37 00000000                 IMPORT           LCD_PrintString
   38 00000000                 IMPORT           LCD_Reset
   39 00000000                 IMPORT           SysTick_Wait1ms
   40 00000000                 IMPORT           print_tabuada
   41 00000000                 IMPORT           print_numero
   42 00000000         
   43 00000000 20000A00 
                       start_mem
                               EQU              0x20000A00
   44 00000000         



ARM Macro Assembler    Page 2 


   45 00000000         ; Função MapMatrixKeyboard
   46 00000000         ; Mapeia o teclado matricial
   47 00000000         ; Parâmetro de entrada:
   48 00000000         ; Parâmetro de saída:
   49 00000000         MapMatrixKeyboard
   50 00000000 B501            PUSH             {LR, R0}
   51 00000002         ; ------------------------------------------------------
                       -----
   52 00000002 F04F 00E0       MOV              R0, #2_11100000 ; Iterando sobr
                                                            e a primeira coluna
                                                            
   53 00000006 F7FF FFFE       BL               PortM_Output
   54 0000000A F7FF FFFE       BL               PortL_Input
   55 0000000E         
   56 0000000E 280E            CMP              R0, #2_1110 ; Número 1 foi pres
                                                            sionado
   57 00000010 BF08 F000 
              F84D             BLEQ.W           DIGIT_1
   58 00000016         
   59 00000016 280D            CMP              R0, #2_1101 ; Número 4 foi pres
                                                            sionado
   60 00000018 BF08 F000 
              F867             BLEQ.W           DIGIT_4
   61 0000001E         
   62 0000001E 280B            CMP              R0, #2_1011 ; Número 7 foi pres
                                                            sionado
   63 00000020 BF08 F000 
              F881             BLEQ.W           DIGIT_7
   64 00000026         
   65 00000026 2807            CMP              R0, #2_0111 ; Símbolo * foi pre
                                                            ssionado
   66 00000028 BF08 F000 
              F89B             BLEQ.W           DIGIT_AST   ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
   67 0000002E         ; ------------------------------------------------------
                       -----
   68 0000002E         
   69 0000002E         ; ------------------------------------------------------
                       -----
   70 0000002E F04F 00D0       MOV              R0, #2_11010000 ; Iterando sobr
                                                            e a segunda coluna
   71 00000032 F7FF FFFE       BL               PortM_Output
   72 00000036 F7FF FFFE       BL               PortL_Input
   73 0000003A         
   74 0000003A 280E            CMP              R0, #2_1110 ; Número 2 foi pres
                                                            sionado
   75 0000003C BF08 F000 
              F841             BLEQ.W           DIGIT_2
   76 00000042         
   77 00000042 280D            CMP              R0, #2_1101 ; Número 5 foi pres
                                                            sionado
   78 00000044 BF08 F000 
              F85B             BLEQ.W           DIGIT_5
   79 0000004A         
   80 0000004A 280B            CMP              R0, #2_1011 ; Número 8 foi pres
                                                            sionado
   81 0000004C BF08 F000 



ARM Macro Assembler    Page 3 


              F875             BLEQ.W           DIGIT_8
   82 00000052         
   83 00000052 2807            CMP              R0, #2_0111 ; Número 0 foi pres
                                                            sionado
   84 00000054 BF08 F000 
              F825             BLEQ.W           DIGIT_0
   85 0000005A         ; ------------------------------------------------------
                       -----
   86 0000005A         
   87 0000005A         ; ------------------------------------------------------
                       -----
   88 0000005A F04F 00B0       MOV              R0, #2_10110000 ; Iterando sobr
                                                            e a terceira coluna
                                                            
   89 0000005E F7FF FFFE       BL               PortM_Output
   90 00000062 F7FF FFFE       BL               PortL_Input
   91 00000066         
   92 00000066 280E            CMP              R0, #2_1110 ; Número 3 foi pres
                                                            sionado
   93 00000068 BF08 F000 
              F835             BLEQ.W           DIGIT_3
   94 0000006E         
   95 0000006E 280D            CMP              R0, #2_1101 ; Número 6 foi pres
                                                            sionado
   96 00000070 BF08 F000 
              F84F             BLEQ.W           DIGIT_6
   97 00000076         
   98 00000076 280B            CMP              R0, #2_1011 ; Número 9 foi pres
                                                            sionado
   99 00000078 BF08 F000 
              F869             BLEQ.W           DIGIT_9
  100 0000007E         
  101 0000007E 2807            CMP              R0, #2_0111 ; Símbolo # foi pre
                                                            ssionado
  102 00000080 BF08 F000 
              F87C             BLEQ.W           DIGIT_HASH  ; Error: Branch off
                                                            set out of range (B
                                                            EQ.W corrige o prob
                                                            lema)
  103 00000086         ; ------------------------------------------------------
                       -----
  104 00000086         
  105 00000086 E8BD 4001       POP              {LR, R0}
  106 0000008A 4770            BX               LR
  107 0000008C         
  108 0000008C         ; Funções DIGIT_X
  109 0000008C         ; Tratam a resposta do sistema para cada tecla pressiona
                       da
  110 0000008C         ; Parâmetro de entrada: Não tem
  111 0000008C         ; Parâmetro de saída: R6 -> O dígito inserido
  112 0000008C         
  113 0000008C         process_digit
  114 0000008C B501            PUSH             {LR, R0}
  115 0000008E F7FF FFFE       BL               update_tabuada
  116 00000092 F7FF FFFE       BL               print_tabuada
  117 00000096 F44F 70FA       MOV              R0, #500    ; Mostra a mensagem
                                                             durante 5s
  118 0000009A F7FF FFFE       BL               SysTick_Wait1ms ; Informa que o
                                                             cofre está aberto 



ARM Macro Assembler    Page 4 


                                                            na primeira linha d
                                                            o LCD
  119 0000009E E8BD 4001       POP              {LR, R0}
  120 000000A2 4770            BX               LR
  121 000000A4         DIGIT_0
  122 000000A4 B501            PUSH             {LR, R0}
  123 000000A6 F000 F873       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  124 000000AA E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  125 000000AE 4770            BX               LR
  126 000000B0         
  127 000000B0         DIGIT_1
  128 000000B0 B501            PUSH             {LR, R0}
  129 000000B2 F000 F86D       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  130 000000B6 F04F 0001       MOV              R0, #1
  131 000000BA F7FF FFE7       BL               process_digit
  132 000000BE E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  133 000000C2 4770            BX               LR
  134 000000C4         
  135 000000C4         DIGIT_2
  136 000000C4 B501            PUSH             {LR, R0}
  137 000000C6 F000 F863       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  138 000000CA F04F 0002       MOV              R0, #2
  139 000000CE F7FF FFDD       BL               process_digit
  140 000000D2 E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  141 000000D6 4770            BX               LR
  142 000000D8         
  143 000000D8         DIGIT_3
  144 000000D8 B501            PUSH             {LR, R0}
  145 000000DA F000 F859       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  146 000000DE F04F 0003       MOV              R0, #3
  147 000000E2 F7FF FFD3       BL               process_digit
  148 000000E6 E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  149 000000EA 4770            BX               LR
  150 000000EC         
  151 000000EC         DIGIT_4
  152 000000EC B501            PUSH             {LR, R0}
  153 000000EE F000 F84F       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re



ARM Macro Assembler    Page 5 


  154 000000F2 F04F 0004       MOV              R0, #4
  155 000000F6 F7FF FFC9       BL               process_digit
  156 000000FA E8BD 4001       POP              {LR, R0}
  157 000000FE 4770            BX               LR
  158 00000100         
  159 00000100         DIGIT_5
  160 00000100 B501            PUSH             {LR, R0}
  161 00000102 F000 F845       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  162 00000106 F04F 0005       MOV              R0, #5
  163 0000010A F7FF FFBF       BL               process_digit
  164 0000010E E8BD 4001       POP              {LR, R0}
  165 00000112 4770            BX               LR
  166 00000114         
  167 00000114         DIGIT_6
  168 00000114 B501            PUSH             {LR, R0}
  169 00000116 F000 F83B       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  170 0000011A F04F 0006       MOV              R0, #6
  171 0000011E F7FF FFB5       BL               process_digit
  172 00000122 E8BD 4001       POP              {LR, R0}    ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  173 00000126 4770            BX               LR
  174 00000128         
  175 00000128         DIGIT_7
  176 00000128 B501            PUSH             {LR, R0}
  177 0000012A F000 F831       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  178 0000012E F04F 0007       MOV              R0, #7
  179 00000132 F7FF FFAB       BL               process_digit
  180 00000136 E8BD 4001       POP              {LR, R0}
  181 0000013A 4770            BX               LR
  182 0000013C         DIGIT_8
  183 0000013C B501            PUSH             {LR, R0}
  184 0000013E F000 F827       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  185 00000142 F04F 0008       MOV              R0, #8
  186 00000146 F7FF FFA1       BL               process_digit
  187 0000014A E8BD 4001       POP              {LR, R0}
  188 0000014E 4770            BX               LR
  189 00000150         
  190 00000150         DIGIT_9
  191 00000150 B501            PUSH             {LR, R0}
  192 00000152 F000 F81D       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  193 00000156 F04F 0009       MOV              R0, #9
  194 0000015A F7FF FF97       BL               process_digit
  195 0000015E E8BD 4001       POP              {LR, R0}
  196 00000162 4770            BX               LR
  197 00000164         
  198 00000164         DIGIT_AST
  199 00000164 B500            PUSH             {LR}



ARM Macro Assembler    Page 6 


  200 00000166         
  201 00000166 F04F 060E       MOV              R6, #0xE    ; Guarda o dígito i
                                                            nserido
  202 0000016A         
  203 0000016A 4C1B            LDR              R4, =DIGIT_AST_STR ; Imprime o 
                                                            dígito no LCD
  204 0000016C F7FF FFFE       BL               LCD_PrintString
  205 00000170         
  206 00000170 F000 F80E       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  207 00000174         
  208 00000174 F107 0701       ADD              R7, R7, #1  ; Incrementa o cont
                                                            ador de dígitos ins
                                                            eridos
  209 00000178         
  210 00000178 F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  211 0000017C 4770            BX               LR
  212 0000017E         
  213 0000017E         DIGIT_HASH
  214 0000017E B500            PUSH             {LR}
  215 00000180         
  216 00000180 2F04            CMP              R7, #4      ; Verifica se 4 díg
                                                            itos já foram inser
                                                            idos
  217 00000182 BF28 2504       MOVHS            R5, #CLOSING ; Senha de 4 dígit
                                                            os inserida, coloca
                                                             o cofre em process
                                                            o de fechamento
  218 00000186         
  219 00000186 F000 F803       BL               Debouncing  ; Trata o bouncing 
                                                            da tecla via softwa
                                                            re
  220 0000018A         
  221 0000018A F85D EB04       POP              {LR}        ; Retorna após dígi
                                                            to inserido ter sid
                                                            o guardado e impres
                                                            so
  222 0000018E 4770            BX               LR
  223 00000190         
  224 00000190         ; Função Debouncing
  225 00000190         ; Trata o bouncing da tecla aguardando um tempo fixo (0,
                       5s)
  226 00000190         ; Parâmetro de entrada: Não tem
  227 00000190         ; Parâmetro de saída: Não tem
  228 00000190         Debouncing
  229 00000190 B500            PUSH             {LR}
  230 00000192         
  231 00000192 F44F 70FA       MOV              R0, #500
  232 00000196 F7FF FFFE       BL               SysTick_Wait1ms
  233 0000019A         
  234 0000019A F85D EB04       POP              {LR}
  235 0000019E 4770            BX               LR
  236 000001A0         
  237 000001A0         
  238 000001A0         ;Input: R0 N



ARM Macro Assembler    Page 7 


  239 000001A0         ;Output R0 = N, R1 = M
  240 000001A0         update_tabuada
  241 000001A0 B51C            PUSH             {LR ,R2, R3, R4}
  242 000001A2         
  243 000001A2 F04F 0404       MOV              R4, #4
  244 000001A6 490D            LDR              R1, =start_mem
  245 000001A8 FB04 1200       MLA              R2, R4, R0, R1
  246 000001AC         
  247 000001AC 6813            LDR              R3, [R2]
  248 000001AE F103 0301       ADD              R3, #1
  249 000001B2         
  250 000001B2 2B09            CMP              R3, #9
  251 000001B4 BFC8 2300       MOVGT            R3, #0
  252 000001B8         
  253 000001B8 6013            STR              R3, [R2]
  254 000001BA         
  255 000001BA 4619            MOV              R1, R3
  256 000001BC E8BD 401C       POP              {LR ,R2, R3, R4}
  257 000001C0         
  258 000001C0 4770            BX               LR
  259 000001C2         
  260 000001C2         ; Definição dos textos do LCD
  261 000001C2 30 00   DIGIT_0_STR
                               DCB              "0", 0
  262 000001C4 31 00   DIGIT_1_STR
                               DCB              "1", 0
  263 000001C6 32 00   DIGIT_2_STR
                               DCB              "2", 0
  264 000001C8 33 00   DIGIT_3_STR
                               DCB              "3", 0
  265 000001CA 34 00   DIGIT_4_STR
                               DCB              "4", 0
  266 000001CC 35 00   DIGIT_5_STR
                               DCB              "5", 0
  267 000001CE 36 00   DIGIT_6_STR
                               DCB              "6", 0
  268 000001D0 37 00   DIGIT_7_STR
                               DCB              "7", 0
  269 000001D2 38 00   DIGIT_8_STR
                               DCB              "8", 0
  270 000001D4 39 00   DIGIT_9_STR
                               DCB              "9", 0
  271 000001D6         
  272 000001D6 2A 00   DIGIT_AST_STR
                               DCB              "*", 0
  273 000001D8         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  274 000001D8         ; Fim do Arquivo
  275 000001D8         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  276 000001D8                 ALIGN                        ; Garante que o fim
                                                             da seção está alin
                                                            hada 
  277 000001D8                 END                          ; Fim do arquivo
              00000000 
              20000A00 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=



ARM Macro Assembler    Page 8 


interwork --depend=.\objects\matrix_keyboard.d -o.\objects\matrix_keyboard.o -I
C:\Users\victo\AppData\Local\Arm\Packs\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C1
29 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 536" --prede
fine="TM4C1294NCPDT SETA 1" --list=.\listings\matrix_keyboard.lst matrix_keyboa
rd.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 15 in file matrix_keyboard.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 26 in file matrix_keyboard.s
   Uses
      None
Comment: .text unused
DIGIT_0 000000A4

Symbol: DIGIT_0
   Definitions
      At line 121 in file matrix_keyboard.s
   Uses
      At line 84 in file matrix_keyboard.s
Comment: DIGIT_0 used once
DIGIT_0_STR 000001C2

Symbol: DIGIT_0_STR
   Definitions
      At line 261 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_0_STR unused
DIGIT_1 000000B0

Symbol: DIGIT_1
   Definitions
      At line 127 in file matrix_keyboard.s
   Uses
      At line 57 in file matrix_keyboard.s
Comment: DIGIT_1 used once
DIGIT_1_STR 000001C4

Symbol: DIGIT_1_STR
   Definitions
      At line 262 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_1_STR unused
DIGIT_2 000000C4

Symbol: DIGIT_2
   Definitions
      At line 135 in file matrix_keyboard.s
   Uses
      At line 75 in file matrix_keyboard.s
Comment: DIGIT_2 used once
DIGIT_2_STR 000001C6

Symbol: DIGIT_2_STR
   Definitions
      At line 263 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_2_STR unused
DIGIT_3 000000D8

Symbol: DIGIT_3



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 143 in file matrix_keyboard.s
   Uses
      At line 93 in file matrix_keyboard.s
Comment: DIGIT_3 used once
DIGIT_3_STR 000001C8

Symbol: DIGIT_3_STR
   Definitions
      At line 264 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_3_STR unused
DIGIT_4 000000EC

Symbol: DIGIT_4
   Definitions
      At line 151 in file matrix_keyboard.s
   Uses
      At line 60 in file matrix_keyboard.s
Comment: DIGIT_4 used once
DIGIT_4_STR 000001CA

Symbol: DIGIT_4_STR
   Definitions
      At line 265 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_4_STR unused
DIGIT_5 00000100

Symbol: DIGIT_5
   Definitions
      At line 159 in file matrix_keyboard.s
   Uses
      At line 78 in file matrix_keyboard.s
Comment: DIGIT_5 used once
DIGIT_5_STR 000001CC

Symbol: DIGIT_5_STR
   Definitions
      At line 266 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_5_STR unused
DIGIT_6 00000114

Symbol: DIGIT_6
   Definitions
      At line 167 in file matrix_keyboard.s
   Uses
      At line 96 in file matrix_keyboard.s
Comment: DIGIT_6 used once
DIGIT_6_STR 000001CE

Symbol: DIGIT_6_STR
   Definitions
      At line 267 in file matrix_keyboard.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: DIGIT_6_STR unused
DIGIT_7 00000128

Symbol: DIGIT_7
   Definitions
      At line 175 in file matrix_keyboard.s
   Uses
      At line 63 in file matrix_keyboard.s
Comment: DIGIT_7 used once
DIGIT_7_STR 000001D0

Symbol: DIGIT_7_STR
   Definitions
      At line 268 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_7_STR unused
DIGIT_8 0000013C

Symbol: DIGIT_8
   Definitions
      At line 182 in file matrix_keyboard.s
   Uses
      At line 81 in file matrix_keyboard.s
Comment: DIGIT_8 used once
DIGIT_8_STR 000001D2

Symbol: DIGIT_8_STR
   Definitions
      At line 269 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_8_STR unused
DIGIT_9 00000150

Symbol: DIGIT_9
   Definitions
      At line 190 in file matrix_keyboard.s
   Uses
      At line 99 in file matrix_keyboard.s
Comment: DIGIT_9 used once
DIGIT_9_STR 000001D4

Symbol: DIGIT_9_STR
   Definitions
      At line 270 in file matrix_keyboard.s
   Uses
      None
Comment: DIGIT_9_STR unused
DIGIT_AST 00000164

Symbol: DIGIT_AST
   Definitions
      At line 198 in file matrix_keyboard.s
   Uses
      At line 66 in file matrix_keyboard.s
Comment: DIGIT_AST used once
DIGIT_AST_STR 000001D6



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols


Symbol: DIGIT_AST_STR
   Definitions
      At line 272 in file matrix_keyboard.s
   Uses
      At line 203 in file matrix_keyboard.s
Comment: DIGIT_AST_STR used once
DIGIT_HASH 0000017E

Symbol: DIGIT_HASH
   Definitions
      At line 213 in file matrix_keyboard.s
   Uses
      At line 102 in file matrix_keyboard.s
Comment: DIGIT_HASH used once
Debouncing 00000190

Symbol: Debouncing
   Definitions
      At line 228 in file matrix_keyboard.s
   Uses
      At line 123 in file matrix_keyboard.s
      At line 129 in file matrix_keyboard.s
      At line 137 in file matrix_keyboard.s
      At line 145 in file matrix_keyboard.s
      At line 153 in file matrix_keyboard.s
      At line 161 in file matrix_keyboard.s
      At line 169 in file matrix_keyboard.s
      At line 177 in file matrix_keyboard.s
      At line 184 in file matrix_keyboard.s
      At line 192 in file matrix_keyboard.s
      At line 206 in file matrix_keyboard.s
      At line 219 in file matrix_keyboard.s

MapMatrixKeyboard 00000000

Symbol: MapMatrixKeyboard
   Definitions
      At line 49 in file matrix_keyboard.s
   Uses
      At line 30 in file matrix_keyboard.s
Comment: MapMatrixKeyboard used once
process_digit 0000008C

Symbol: process_digit
   Definitions
      At line 113 in file matrix_keyboard.s
   Uses
      At line 131 in file matrix_keyboard.s
      At line 139 in file matrix_keyboard.s
      At line 147 in file matrix_keyboard.s
      At line 155 in file matrix_keyboard.s
      At line 163 in file matrix_keyboard.s
      At line 171 in file matrix_keyboard.s
      At line 179 in file matrix_keyboard.s
      At line 186 in file matrix_keyboard.s
      At line 194 in file matrix_keyboard.s

update_tabuada 000001A0



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols


Symbol: update_tabuada
   Definitions
      At line 240 in file matrix_keyboard.s
   Uses
      At line 31 in file matrix_keyboard.s
      At line 115 in file matrix_keyboard.s

28 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

CLOSING 00000004

Symbol: CLOSING
   Definitions
      At line 12 in file matrix_keyboard.s
   Uses
      At line 217 in file matrix_keyboard.s
Comment: CLOSING used once
start_mem 20000A00

Symbol: start_mem
   Definitions
      At line 43 in file matrix_keyboard.s
   Uses
      At line 244 in file matrix_keyboard.s
Comment: start_mem used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

LCD_PrintString 00000000

Symbol: LCD_PrintString
   Definitions
      At line 37 in file matrix_keyboard.s
   Uses
      At line 204 in file matrix_keyboard.s
Comment: LCD_PrintString used once
LCD_Reset 00000000

Symbol: LCD_Reset
   Definitions
      At line 38 in file matrix_keyboard.s
   Uses
      None
Comment: LCD_Reset unused
PortL_Input 00000000

Symbol: PortL_Input
   Definitions
      At line 36 in file matrix_keyboard.s
   Uses
      At line 54 in file matrix_keyboard.s
      At line 72 in file matrix_keyboard.s
      At line 90 in file matrix_keyboard.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 35 in file matrix_keyboard.s
   Uses
      At line 53 in file matrix_keyboard.s
      At line 71 in file matrix_keyboard.s
      At line 89 in file matrix_keyboard.s

SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 39 in file matrix_keyboard.s
   Uses
      At line 118 in file matrix_keyboard.s
      At line 232 in file matrix_keyboard.s

print_numero 00000000

Symbol: print_numero
   Definitions
      At line 41 in file matrix_keyboard.s
   Uses
      None
Comment: print_numero unused
print_tabuada 00000000

Symbol: print_tabuada
   Definitions
      At line 40 in file matrix_keyboard.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      At line 116 in file matrix_keyboard.s
Comment: print_tabuada used once
7 symbols
374 symbols in table
